{"version":3,"sources":["utils/generateCommonResponsive.ts","components/MainForm.tsx","components/Fields/FieldNumber.tsx","components/Fields/FieldSelect.tsx","utils/calculator.ts","utils/validateEq.ts","components/FruitsDisplay.tsx","components/Forms/FifthForm.tsx","components/Fruit.tsx","components/Forms/FourthForm.tsx","components/Forms/ThirdForm.tsx","components/Fields/FieldInput.tsx","components/Forms/FirstForm.tsx","components/Forms/SecondForm.tsx","components/Forms/SixthForm.tsx","pages/Calculator.tsx"],"names":["generateCommonResponsive","base","lg","MainForm","children","autoHeight","w","mx","d","flexDirection","boxShadow","p","h","justifyContent","bg","borderRadius","pos","overflow","validateNumber","num","FieldNumber","label","labelStyle","formControlStyle","id","helperText","disabled","rest","useField","value","error","initialValue","setValue","isDisabled","fontWeight","defaultValue","name","onChange","_","_value","step","fontSize","FieldSelect","selectOptions","field","map","option","displayValue","calculator","operand","operand2","operator","validateEq","oldValues","newValues","same","index","FruitsDisplay","interval","decimalValue","prefix","values","fruit","fruitRef","result","Math","abs","split","floor","fruitArray","fruitArray2","Array","from","length","v","i","zIndex","textAlign","mb","spacing","maxW","flexBasis","minW","f","ref","src","maxH","mt","current","getClientRects","width","height","FifthForm","ln","dispatch","history","useSelector","state","correctnessSimple","language","useState","alert","setAlert","matches","guesses","setGuesses","previousEq","useRef","lnObjBasic","header","header2","btnText2","btnText","as","color","minH","direction","status","flex","alignItems","initialValues","onSubmit","storeResults","actionType","handleSubmit","lnObj","operations","helperTextFruits","lnObjGenerator","Form","style","e","preventDefault","m","flexWrap","min","pt","type","ml","justify","onClick","push","alignSelf","leftIcon","ArrowBack","rightIcon","ArrowForward","to","Fruit","href","text","cursor","mr","transition","_hover","undefined","fruits","img","FourthForm","letterSpacing","payload","fruitHandler","ThirdForm","learnMathHandler","learnMath","yes","no","Check","Close","FieldInput","turnOffAutoComplete","required","size","props","isInvalid","isRequired","htmlFor","autoComplete","label2","FirstForm","surname","placeholder","right","bottom","SecondForm","city","age","left","transform","SixthForm","correctnessAdvanced","Calculator","useDispatch","path","exact"],"mappings":"kJAAA,kCAAO,IAAMA,EAA2B,SAAOC,EAASC,GACtD,MAAO,CACLD,OACAC,Q,iCCHJ,sEASaC,EAAoC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC5D,OACE,cAAC,IAAD,CACEC,EAAE,MACFC,GAAG,OACHC,EAAE,OACFC,cAAc,SACdC,UAAU,MACVC,EAAG,EACHC,EAAGZ,YAAyB,OAAQK,EAAa,OAAS,SAC1DQ,eAAe,aACfC,GAAG,iBACHC,aAAa,KACbC,IAAI,WACJC,SAAS,SAZX,SAcGb,M,8NCPDc,EAAiB,SAACC,GACtB,MAAiB,QAAb,UAAGA,GACE,EAGFA,GAaIC,EAA0C,SAAC,GAQjD,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,WACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACGC,EACC,wFACqDC,YAASJ,GAD9D,0BACOK,EADP,EACOA,MAAOC,EADd,EACcA,MAAOC,EADrB,EACqBA,aAAkBC,EADvC,KACuCA,SAE3C,OACE,eAAC,IAAD,yBAAaC,WAAYP,GAAcH,GAAvC,cACE,cAAC,IAAD,yBAAWW,WAAY,KAASZ,GAAhC,aACGD,KAEH,eAAC,IAAD,yBACEc,aAA6B,EAAfJ,EACdP,GAAIA,EACJY,KAAMZ,EACNa,SAAU,SAACC,EAAGC,GAAJ,OAAeP,EAASd,EAAeqB,KACjDC,KAAM,EACNX,MAAOX,EAAeW,GACtBf,GAAG,SACCa,GARN,cAUE,cAAC,IAAD,IACA,cAAC,IAAD,WACID,GACA,qCACE,cAAC,IAAD,IACA,cAAC,IAAD,aAKPD,GACC,cAAC,IAAD,CAAgBgB,SAAS,KAAzB,SAA+BhB,IAEhCK,EAAQ,cAAC,IAAD,UAAmBA,IAA4B,U,2BCpDjDY,EAA0C,SAAC,GAQjD,IAPLrB,EAOI,EAPJA,MACAC,EAMI,EANJA,WACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,GACAmB,EAGI,EAHJA,cACAlB,EAEI,EAFJA,WACGE,EACC,6FACuBC,YAASJ,GADhC,mBACGoB,EADH,KACYd,EADZ,KACYA,MAChB,OACE,eAAC,IAAD,2BAAiBP,GAAjB,cACE,cAAC,IAAD,yBAAWW,WAAY,KAASZ,GAAhC,aACGD,KAEH,cAAC,IAAD,uCAAYuB,GAAZ,IAAmBpB,GAAIA,EAAIY,KAAMZ,EAAIV,GAAG,SAAYa,GAApD,aACGgB,EAAcE,KAAI,SAACC,GAAD,OACjB,wBAAwBjB,MAAOiB,EAAOjB,MAAOL,GAAIsB,EAAOtB,GAAxD,SACGsB,EAAOC,cADGD,EAAOtB,UAKvBC,GACC,cAAC,IAAD,CAAgBgB,SAAS,KAAzB,SAA+BhB,IAEhCK,EAAQ,cAAC,IAAD,UAAmBA,IAA4B,UC/CjDkB,EAAa,SACxBC,EACAC,EACAC,GAEA,OAAQA,GACN,IAAK,IACH,OAAOF,EAAUC,EACnB,IAAK,IACH,OAAOD,EAAUC,EACnB,IAAK,IACH,OAAOD,EAAUC,EACnB,QAEE,OAAOD,EAAUC,ICXVE,EAAa,SACxBC,EACAC,GAEA,GAAID,EAAW,CACb,IAAIE,EAAO,EACX,IAAK,IAAIC,KAASH,EACZA,EAAUG,KAAWF,EAAUE,KACjCD,GAAc,GAKlB,OAAa,IAATA,EAMJ,OAAO,G,SCPEE,EAA8C,SAAC,GAIrD,IAODC,EASAC,EASAC,EACAjC,EA7BJkC,EAGI,EAHJA,OACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEIC,EAAShB,EACXa,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,UAILa,EAAS,IAEXN,EAAW,YAGXM,EAASC,KAAKC,IAAIF,IAKhBA,EAAS,IAAM,KAEjBL,EAAe,UAAGK,GAASG,MAAM,KAAK,MACpBR,EAAeA,EAAa,IAC9CK,EAASC,KAAKG,MAAMJ,IAKtB,IAAIK,EAAoB,GACpBC,EAAqB,GAczB,OAbIN,EAAS,IAEXJ,EAASK,KAAKG,MAAMJ,EAAS,IAC7BK,EAAaE,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAUA,KAGlDhD,EAAOqC,EAAS,GAChBM,EAAcC,MAAMC,KAAK,CAAEC,OAAQ9C,IAAQ,SAAC+C,EAAGC,GAAJ,OAAUA,MAGrDN,EAAaE,MAAMC,KAAK,CAAEC,OAAQT,IAAU,SAACU,EAAGC,GAAJ,OAAUA,KAItD,eAAC,IAAD,CAAKC,OAAO,IAAZ,UACGlB,GACC,cAAC,IAAD,CAAMmB,UAAU,SAAS3C,WAAW,MAAMO,SAAS,KAAKqC,GAAI,EAA5D,SACGpB,IAGL,eAAC,IAAD,CAAQqB,QAAS,EAAGC,KAAK,MAAMzE,GAAG,OAAlC,UACGqD,GAAqB,IAAXA,EACT,cAAC,IAAD,CACEqB,UAAU,OACVC,KAAK,QACLzC,SAAS,KACTP,WAAW,OAJb,mBAKK0B,EALL,iBAME,KACHS,EAAWxB,KAAI,SAACsC,GAAD,OACd,cAAC,IAAD,CAAKF,UAAU,OAAeG,IAAKrB,EAAnC,SACE,cAAC,IAAD,CACEsB,IAAG,mCAA8BvB,EAA9B,QACHlD,EAAE,OACFN,EAAE,OACFgF,KAAK,QACLN,KAAK,WANkBG,MAU5BxB,GAAuC,IAAvBW,EAAYG,OAC3B,eAAC,IAAD,CAAKQ,UAAU,OAAO/C,WAAY,IAAKO,SAAS,KAAKyC,KAAK,UAA1D,gBACM,IADN,UAEMvB,EAFN,4BAEsCG,EAFtC,8BAIE,QAELQ,EAAYG,OAAS,EACpB,eAAC,IAAD,CAAQM,QAAS,EAAGC,KAAK,MAAMzE,GAAG,OAAOgF,GAAI,EAA7C,UACE,cAAC,IAAD,CAAKN,UAAU,OAAOC,KAAK,QAAQzC,SAAS,KAAKP,WAAW,OAA5D,iBAGCoC,EAAYzB,KAAI,SAACsC,GAAD,eACf,cAAC,IAAD,CACEF,UAAU,OAEV3E,GAAG,UAAAyD,EAASyB,eAAT,eAAkBC,iBAAiB,GAAGC,QAAS,OAClD9E,GAAG,UAAAmD,EAASyB,eAAT,eAAkBC,iBAAiB,GAAGE,SAAU,OAJrD,SAME,cAAC,IAAD,CACEN,IAAG,mCAA8BvB,EAA9B,QACHxD,EAAE,OACFM,EAAE,OACF0E,KAAK,QACLN,KAAK,WATFG,MAaRxB,EACC,eAAC,IAAD,CAAKsB,UAAU,OAAO/C,WAAY,IAAKO,SAAS,KAAKyC,KAAK,UAA1D,gBACM,IADN,UAEMvB,EAFN,8BAEwCG,EAFxC,8BAIE,QAEJ,S,iBCxDG8B,EAAsC,SAAC,GAA2B,IArC/CC,EAqCsBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAGvBC,aAGnD,SAACC,GAAD,OAAWA,KAHL7D,EAHoE,EAGpEA,KAAM0B,EAH8D,EAG9DA,MAAOoC,EAHuD,EAGvDA,kBAAmBC,EAHoC,EAGpCA,SAHoC,EAOlDC,mBAAqC,MAPa,mBAOrEC,EAPqE,KAO9DC,EAP8D,OAQ9CF,oBACX,OAAjBF,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBK,UAAW,GAT4C,mBAQrEC,EARqE,KAQ5DC,EAR4D,KAWtEC,EAAaC,mBACb5C,EAAW4C,iBAAyB,MAEpCC,EAnDwC,CAC9CC,OAAQ,CAAC,kDAAD,6PADsBhB,EAmDYM,GA9C1CW,QAAS,CAAC,yDAAD,ucAGPjB,GACFkB,SAAU,CAAC,WAAY,0DAAalB,GACpCmB,QAAS,CAAC,OAAQ,wCAAUnB,IA0C5B,OACE,cAAC1F,EAAA,EAAD,CAAUE,YAAU,EAApB,SACG+B,EACC,qCACE,eAAC,IAAD,CAAMyC,UAAU,QAAhB,6BACmB,IACjB,cAAC,IAAD,CAAMoC,GAAG,OAAOC,MAAM,QAAtB,SACGV,IACK,IAJV,yCAOA,eAAC,IAAD,CAAK3B,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,UACE,cAAC,IAAD,CAAST,GAAI,EAAGrC,SAAUzC,YAAyB,KAAM,OAAzD,SACG4G,EAAWC,SAEd,cAAC,IAAD,CAAS/B,GAAI,EAAGrC,SAAUzC,YAAyB,KAAM,OAAzD,SACG4G,EAAWE,aAGhB,eAAC,IAAD,CAAMxG,EAAE,OAAO6G,KAAK,MAAMC,UAAU,SAApC,UACGf,GACC,cAAC,IAAD,CAAK/F,EAAE,MAAMC,GAAG,OAAOuE,GAAI,EAA3B,SACE,eAAC,IAAD,CAAOuC,OAAQhB,EAAOtF,aAAa,KAAnC,UACE,cAAC,IAAD,IACW,YAAVsF,EACG,4BACA,wBAIV,cAAC,IAAD,CACEiB,KAAM,EACN9G,EAAE,OACFK,eAAe,SACf0G,WAAW,SACX3C,OAAO,IALT,SAOE,cAAC,IAAD,CACE4C,cAAe,CACbrE,SAAU,IACVF,QAAS,EACTC,SAAU,EACVc,OAAQ,GAEVyD,SAAU,SAAC5D,GAGNT,EAAWsD,EAAWlB,QAAS,CAC9B3B,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,SACPU,EAAOG,WAQThB,EACEa,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,YACHU,EAAOG,QAEbsC,EAAS,WACTG,EAAWD,EAAU,GACrBV,EACE4B,YAAa,CACXC,WAAY,MACZ3E,WAAY,cAIhBsD,EAAS,SACLE,EAAU,GAAGC,EAAWD,EAAU,GACtCV,EACE4B,YAAa,CACXC,WAAY,OACZ3E,WAAY,aAKlB0D,EAAWlB,QAAU,CACnB3B,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,SACPU,EAAOG,UAnDb,SAuDG,YAA+B,IAA5B4D,EAA2B,EAA3BA,aAAc/D,EAAa,EAAbA,OACVgE,EApID,SACrBzF,EACAyD,EACAiC,GAHqB,MASjB,CACJC,iBAAkB,CAAC,GAAD,OACb3F,EADa,sBACK0F,EAAW7E,QADhB,YAC2B6E,EAAWhE,MADtC,yBAEU,MAAxBgE,EAAW3E,SAAmB,QAAU,aAF1B,gBAGR2E,EAAW5E,SAHH,YAId4E,EAAWhE,MAJG,0CAMb1B,EANa,sCAMC0F,EAAW7E,QANZ,YAMuB6E,EAAWhE,MANlC,iEAOU,MAAxBgE,EAAW3E,SAAmB,2BAAS,2BAPzB,YAQZ2E,EAAW5E,SARC,YAQW4E,EAAWhE,MARtB,6CASdgE,EAAWhE,MATG,gCAWhB+B,IA+G4BmC,CAAe5F,EAAM+D,EAAU,CAC3CrC,MAAOA,GAAS,QAChBb,QAASY,EAAOZ,QAChBC,SAAUW,EAAOX,SACjBC,SAAUU,EAAOV,WAEnB,OACE,eAAC8E,EAAA,EAAD,CACEC,MAAO,CAAExC,MAAO,QAChB+B,SAAU,SAACU,GACTA,EAAEC,iBACFR,EAAaO,IAJjB,UAOE,eAAC,IAAD,CACE7H,EAAGN,YAAyB,OAAQ,OACpCqI,EAAE,OACFtD,QAAS/E,YAAyB,EAAG,IACrCsI,SACEtI,YAAyB,OAAQ,UAEnCuH,WAAW,aAPb,UASE,cAAC,EAAD,CAAalG,MAAM,GAAGG,GAAG,UAAU+G,IAAK,IACxC,cAAC,EAAD,CACElH,MAAM,GACNG,GAAG,WACHmB,cAAe,CACb,CACEI,aAAc,eACdvB,GAAI,IACJK,MAAO,KAET,CACEkB,aAAc,kBACdvB,GAAI,IACJK,MAAO,QAIb,cAAC,EAAD,CAAaR,MAAM,GAAGG,GAAG,WAAW+G,IAAK,IACzC,cAAC,IAAD,CACErG,WAAW,OACXO,SAAS,MACT+F,GAAI,EACJ3D,UACE7E,YAAyB,SAAU,QAErCM,EAAGN,YAAyB,OAAQ,QAPtC,eAWA,cAAC,EAAD,CACEqB,MAAM,GACNG,GAAG,SACHC,WAAW,mDAGf,cAAC,IAAD,CAAKnB,EAAE,MAAMC,GAAG,OAAOgF,GAAI,EAA3B,SACE,cAAC,IAAD,CACEkD,KAAK,SACLnI,EAAE,QACFoI,GAAG,OACHlI,EAAE,QAJJ,qBASF,cAAC,IAAD,CACEF,EAAE,MACFC,GAAG,OACHgF,GAAI,EACJrD,WAAY,IACZO,SAAS,KACTqC,GAAI,EANN,SAQE,cAAC,IAAD,CAAMD,UAAU,SAAhB,SAQGgD,EAAME,qBAGX,cAAC,EAAD,CACElE,OAAQA,EACRC,MAAOA,GAAS,SAChBC,SAAUA,YAOtB,eAAC,IAAD,CAAM4E,QAAQ,gBAAd,UACE,cAAC,IAAD,CACEC,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,kBAEfvI,EAAE,QACFwI,UAAU,aACVC,SAAU,cAACC,EAAA,EAAD,IANZ,SAQGpC,EAAWG,WAEbP,GAAW,EACV,cAAC,IAAD,CACEoC,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,kBAEfvI,EAAE,QACFwI,UAAU,WACVG,UAAW,cAACC,EAAA,EAAD,IANb,SAQGtC,EAAWI,UAEZ,cAKV,cAAC,IAAD,CAAUmC,GAAG,mBC/RRC,EAA+B,SAAC,GAKtC,IAJLC,EAII,EAJJA,KACAT,EAGI,EAHJA,QACAU,EAEI,EAFJA,KACApC,EACI,EADJA,MAEA,OACE,eAAC,IAAD,CACEqC,OAAO,UACPC,GAAIxJ,YAAyB,EAAG,IAChCyJ,WAAW,WACXC,OAAQ,CACN5I,GAAG,GAAD,OAAKoG,EAAL,SAEJ0B,QAASA,EACTtI,EAAGN,YAAyB,MAAO,SACnCe,aAAa,KACbqG,UAAU,SACVuB,QAAQ,WAXV,UAcE,cAAC,IAAD,CACEtD,IAAKgE,EACL/I,EAAE,OACFwE,GAAI,EACJnE,EAAG,EACHC,EAAGZ,YAAyB,YAAQ2J,KAEtC,cAAC,IAAD,CACE7I,GAAIoG,EACJrC,UAAU,SACV3C,WAAY,IACZvB,EAAG,EACHI,aAAa,KALf,SAOGuI,QChCHM,EAKA,CACJ,CACE9F,MAAO,SACP+F,IAAI,sCACJP,KAAM,CAAC,SAAU,wCACjBpC,MAAO,UAET,CACEpD,MAAO,QACP+F,IAAI,qCACJP,KAAM,CAAC,QAAS,8CAChBpC,MAAO,SAET,CACEpD,MAAO,SACP+F,IAAI,sCACJP,KAAM,CAAC,SAAU,oDACjBpC,MAAO,WAYE4C,EAAwC,SAAC,GAG/C,IAFLhE,EAEI,EAFJA,SACAC,EACI,EADJA,QACI,EACuBC,aAGzB,SAACC,GAAD,OAAWA,KAHL7D,EADJ,EACIA,KAAM+D,EADV,EACUA,SAeR0B,EA3Be,SAACzF,EAAcyD,GAAf,MAA8B,CACnDgB,OAAQ,CAAC,gCAAD,OAC0BzE,EAD1B,uLAE8BA,EAF9B,MAGNyD,GACFkB,SAAU,CAAC,WAAY,0DAAalB,IAsBtBmC,CAAe5F,EAAM+D,GAEnC,OACE,cAAChG,EAAA,EAAD,UACGiC,EACC,qCACE,cAAC,IAAD,CAAKyC,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,SACE,cAAC,IAAD,CAASwE,cAAc,MAAMjF,GAAI,EAAjC,SACG+C,EAAMhB,WAGX,cAAC,IAAD,CACEvG,EAAE,OACFM,EAAE,MACFK,SAAS,SACT0H,QAAQ,eACRpB,WAAW,UACXzC,GAAI,EANN,SAQG8E,EAAO/G,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,CAEEoD,MAAOpD,EAAMoD,MACbmC,KAAMvF,EAAM+F,IACZP,KAAMxF,EAAMwF,KAAKnD,GACjByC,QAAS,kBAnCF,SAAC9E,GACpBgC,EAAS,CACP2C,KAAM,QACNuB,QAAS,CACPlG,WAGJiC,EAAQ8C,KAAK,iBA4BcoB,CAAanG,EAAMA,SAJ7BA,EAAMA,YAQjB,cAAC,IAAD,CACE8E,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,kBAEfvI,EAAE,QAGFyI,SAAU,cAACC,EAAA,EAAD,IAPZ,SASGnB,EAAMd,cAIX,cAAC,IAAD,CAAUoC,GAAG,mB,kBCtFRe,EAAsC,SAAC,GAA2B,IAAzBpE,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACjDC,aAGzB,SAACC,GAAD,OAAWA,KAHL7D,EADoE,EACpEA,KAAM+D,EAD8D,EAC9DA,SAKRgE,EAAmB,SAACtI,GACxBiE,EAAS,CAAE2C,KAAM,QAASuB,QAAS,CAAEI,WAAW,KAChDrE,EAAQ8C,KAAK,kBAGThB,EArBe,SAACzF,EAAcyD,GAAf,MAA8B,CACnDgB,OAAQ,CAAC,8BAAD,OACwBzE,EADxB,uLAE8BA,IACpCyD,GACFwE,IAAK,CAAC,MAAD,gBAAcxE,GACnByE,GAAI,CAAC,KAAM,gBAAMzE,GACjBkB,SAAU,CAAC,WAAY,0DAAalB,IActBmC,CAAe5F,EAAM+D,GAEnC,OACE,cAAChG,EAAA,EAAD,UACGiC,EACC,qCACE,cAAC,IAAD,CAAKyC,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,SACE,cAAC,IAAD,CAASwE,cAAc,MAAMjF,GAAI,EAAjC,SACG+C,EAAMhB,WAGX,eAAC,IAAD,CACEvG,EAAE,OACFM,EAAE,MACFK,SAAS,SACT0H,QAAQ,SACRpB,WAAW,SACXzC,GAAI9E,YAAyB,EAAG,QANlC,UAQE,eAAC,IAAD,CACEuJ,OAAO,UACPC,GAAI,GACJC,WAAW,WACXC,OAAQ,CACN5I,GAAI,aAEN8H,QAAS,kBAAMuB,KAPjB,UASE,cAACI,EAAA,EAAD,CAAWrD,MAAM,QAAQ5G,EAAG,GAAIM,EAAG,KACnC,cAAC,IAAD,CACEsG,MAAM,QACNpG,GAAG,QACH+D,UAAU,SACV3C,WAAY,IAJd,SAMG2F,EAAMwC,SAGX,eAAC,IAAD,CACEd,OAAO,UACPjJ,EAAE,OACFmJ,WAAW,WACXC,OAAQ,CACN5I,GAAI,WAEN8H,QAAS,kBAAMuB,KAPjB,UASE,cAACK,EAAA,EAAD,CAAWtD,MAAM,MAAM5G,EAAG,GAAIM,EAAG,GAAIL,GAAG,OAAOC,EAAE,UACjD,cAAC,IAAD,CAAM0G,MAAM,QAAQpG,GAAG,MAAM+D,UAAU,SAAS3C,WAAY,IAA5D,SACG2F,EAAMyC,WAIb,cAAC,IAAD,CACE1B,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,kBAEfvI,EAAE,QAGFyI,SAAU,cAACC,EAAA,EAAD,IAPZ,SASGnB,EAAMd,cAIX,cAAC,IAAD,CAAUoC,GAAG,mB,SC1CNsB,EApC+B,SAAC,GAUxC,IATLnJ,EASI,EATJA,WACAC,EAQI,EARJA,iBACAmJ,EAOI,EAPJA,oBACAC,EAMI,EANJA,SACAtJ,EAKI,EALJA,MAGAI,GAEI,EAJJmJ,KAII,EAHJ1C,MAGI,EAFJzG,YACGoJ,EACC,wHACuBjJ,YAASiJ,GADhC,mBACGjI,EADH,KACYd,EADZ,KACYA,MAChB,OACE,eAAC,IAAD,yBACEgJ,YAAahJ,EACbiJ,WAAYJ,GACRpJ,GAHN,cAKE,eAAC,IAAD,yBAAWyJ,QAASH,EAAMzI,KAAMF,WAAY,KAASZ,GAArD,cACGD,EAAO,QAEV,cAAC,IAAD,2BACMuB,GADN,IAEEpB,GAAIqJ,EAAMzI,KACV6I,aAAcP,EAAsB,MAAQ,KAC5C5J,GAAG,SACC+J,IAELpJ,GACC,cAAC,IAAD,CAAgBgB,SAAS,KAAzB,SAA+BhB,IAEhCK,EAAQ,cAAC,IAAD,UAAmBA,IAA4B,UCtCxD+F,EAAQ,CACZhB,OAAQ,CAAC,SAAU,yCACnBC,QAAS,CACP,gEACA,sQAEFzF,MAAO,CAAC,yBAA0B,6IAClC6J,OAAQ,CAAC,6BAA8B,2KACvClE,QAAS,CAAC,OAAQ,yCAGPmE,EAAsC,SAAC,GAA2B,IAAzBrF,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACpCC,aAGtC,SAACC,GAAD,OAAWA,KAHL7D,EADoE,EACpEA,KAAMgJ,EAD8D,EAC9DA,QAAmBvF,EAD2C,EACrDM,SAKvB,OACE,eAAChG,EAAA,EAAD,WACE,eAAC,IAAD,CAAK0E,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,UACE,cAAC,IAAD,CACEwE,cAAc,MACdjF,GAAI,EACJrC,SAAUzC,YAAyB,MAAO,OAH5C,SAKG6H,EAAMhB,OAAOhB,KAEhB,cAAC,IAAD,CAASpD,SAAUzC,YAAyB,KAAM,OAAlD,SACG6H,EAAMf,QAAQjB,QAGnB,eAAC,IAAD,CAAMvF,EAAE,OAAOM,EAAE,MAAMK,SAAS,SAAhC,UACE,cAAC,IAAD,CACEqG,KAAM,EACN9G,EAAE,OACFK,eAAe,SACf0G,WAAW,SACX3C,OAAQ,EALV,SAOE,cAAC,IAAD,CACE4C,cAAe,CAAEpF,KAAMA,GAAQ,GAAIgJ,QAASA,GAAW,IACvD3D,SAAU,SAAC5D,GACTiC,EAAS,CACP2C,KAAM,QACNuB,QAASnG,IAGXkC,EAAQ8C,KAAK,kBARjB,SAWG,gBAAGjB,EAAH,EAAGA,aAAH,OACC,cAACK,EAAA,EAAD,CACEC,MAAO,CAAExC,MAAO,QAChB+B,SAAU,SAACU,GACTA,EAAEC,iBACFR,EAAaO,IAJjB,SAOE,eAAC,IAAD,CACE7H,EAAGN,YAAyB,OAAQ,OACpCqI,EAAE,OACFtD,QAAS,GAHX,UAKE,cAAC,EAAD,CACE1D,MAAOwG,EAAMxG,MAAMwE,GACnBzD,KAAK,OACLiJ,YAAY,aACZV,UAAQ,IAEV,cAAC,EAAD,CACEtJ,MAAOwG,EAAMqD,OAAOrF,GACpBzD,KAAK,UACLiJ,YAAY,UACZV,UAAQ,IAEV,cAAC,IAAD,CACElC,KAAK,SACLK,UAAU,WACVxI,EAAGN,YAAyB,OAAQ,SAHtC,SAKG6H,EAAMb,QAAQnB,eAO3B,cAAC,IAAD,CACEyB,KAAM,EACN1G,EAAGZ,YAAyB,MAAO,QACnCgB,IAAKhB,YAAyB,WAAY,UAC1CsL,MAAO,EACPC,OAAQ,EALV,SAOE,cAAC,IAAD,CACElG,IAAI,+EACJzE,EAAE,OACFL,GAAG,kBCvFFiL,EAAwC,SAAC,GAG/C,IAFL1F,EAEI,EAFJA,SACAC,EACI,EADJA,QACI,EAGkCC,aAGpC,SAACC,GAAD,OAAWA,KAHL7D,EAHJ,EAGIA,KAAMqJ,EAHV,EAGUA,KAAMC,EAHhB,EAGgBA,IAKd7F,EAnBe,SAACzD,EAAcyD,GAAf,MAA8B,CACnDgB,OAAQ,CAAC,WAAD,OAAYzE,GAAZ,yEAAoCA,IAAQyD,GACpDxE,MAAO,CAAC,4BAAD,OAA6Be,EAA7B,6EAAqDA,EAArD,MAA8DyD,GACrEqF,OAAQ,CAAC,mBAAD,OAAoB9I,EAApB,4GAAkDA,EAAlD,MAA2DyD,GACnEmB,QAAS,CAAC,OAAQ,wCAAUnB,GAC5BkB,SAAU,CAAC,WAAY,0DAAalB,IAczBmC,CAAe5F,EARtB,EAGqB+D,UAOzB,OACE,cAAChG,EAAA,EAAD,UACGiC,EACC,qCACE,cAAC,IAAD,CAAKyC,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,SACE,cAAC,IAAD,CAASwE,cAAc,MAAMjF,GAAI,EAAjC,SACGe,EAAGgB,WAGR,eAAC,IAAD,CAAMvG,EAAE,OAAOM,EAAE,MAAMwG,UAAU,SAASnG,SAAS,SAAnD,UACE,cAAC,IAAD,CACEqG,KAAM,EACN9G,EAAE,OACFK,eAAe,SACf0G,WAAW,SACX3C,OAAO,IALT,SAOE,cAAC,IAAD,CACE4C,cAAe,CAAEkE,IAAKA,GAAO,EAAGD,KAAMA,GAAQ,IAC9ChE,SAAU,SAAC5D,GACTiC,EAAS,CACP2C,KAAM,QACNuB,QAASnG,IAGXkC,EAAQ8C,KAAK,kBARjB,SAWG,gBAAGjB,EAAH,EAAGA,aAAH,OACC,eAACK,EAAA,EAAD,CACEC,MAAO,CAAExC,MAAO,QAChB+B,SAAU,SAACU,GACTA,EAAEC,iBACFR,EAAaO,IAJjB,UAOE,eAAC,IAAD,CACE7H,EAAGN,YAAyB,OAAQ,OACpCqI,EAAE,OACFtD,QAAS,GACTD,GAAI9E,YAAyB,OAAQ,QAJvC,UAME,cAAC,EAAD,CACEqB,MAAOwE,EAAGxE,MACVe,KAAK,OACLiJ,YAAY,OACZV,UAAQ,IAEV,cAAC,EAAD,CACEtJ,MAAOwE,EAAGqF,OACV1J,GAAG,MACH6J,YAAY,MACZ9J,iBAAkB,CAChBwJ,YAAY,QAIlB,cAAC,IAAD,CACEtC,KAAK,SACLK,UAAU,WACVxI,EAAE,QACFU,IAAI,WACJuK,OAAQ,EACRD,MAAO,EACPrC,UAAW,cAACC,EAAA,EAAD,IAPb,SASGrD,EAAGmB,kBAMd,cAAC,IAAD,CACEM,KAAMtH,YAAyB,OAAQ,GACvCY,EAAGZ,YAAyB,QAAS,QACrCgB,IAAKhB,YAAyB,WAAY,UAC1C4E,OAAO,IACP2G,OAAQ,EALV,SAOE,cAAC,IAAD,CACElG,IAAI,8DACJzE,EAAE,OACFL,GAAG,OACHgL,OAAO,QACPI,KAAK,QACL3K,IAAKhB,iBAAyB2J,EAAW,YACzCiC,UACE5L,iBAAyB2J,EAAW,qBAI1C,cAAC,IAAD,CACEf,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,gBAEfvI,EAAE,QAGFyI,SAAU,cAACC,EAAA,EAAD,IACVhI,IAAI,WACJuK,OAAQ,EATV,SAWG1F,EAAGkB,iBAKV,cAAC,IAAD,CAAUoC,GAAG,mBCnFR0C,EAAsC,SAAC,GAA2B,IAjC/ChG,EAiCsBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAQxEC,aAAsD,SAACC,GAAD,OAAWA,KALnE7D,EAH0E,EAG1EA,KACA0B,EAJ0E,EAI1EA,MACAgI,EAL0E,EAK1EA,oBACA5F,EAN0E,EAM1EA,kBACAC,EAP0E,EAO1EA,SAP0E,EASlDC,mBAAqC,MATa,mBASrEC,EATqE,KAS9DC,EAT8D,OAU9CF,oBACT,OAAnB0F,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBvF,UAAW,GAX0C,mBAUrEC,EAVqE,KAU5DC,EAV4D,KAatEC,EAAaC,mBACb5C,EAAW4C,iBAAyB,MAEpCC,EAjDwC,CAC9CC,OAAQ,CAAC,qDAAD,2OADsBhB,EAiDYM,GA5C1CW,QAAS,CAAC,yDAAD,ucAGPjB,GACFkB,SAAU,CAAC,WAAY,0DAAalB,GACpCmB,QAAS,CAAC,gBAAiB,0DAAanB,IAwCxC,OACE,cAAC1F,EAAA,EAAD,CAAUE,YAAU,EAApB,SACG+B,GAAQ8D,EACP,qCACE,eAAC,IAAD,CAAMrB,UAAU,QAAhB,6BACmB,IACjB,cAAC,IAAD,CAAMoC,GAAG,OAAOC,MAAM,QAAtB,SACGV,IACK,IAJV,yCAOA,eAAC,IAAD,CAAK3B,UAAU,SAASC,GAAI,GAAIS,GAAI,EAApC,UACE,cAAC,IAAD,CAAST,GAAI,EAAGrC,SAAUzC,YAAyB,KAAM,OAAzD,SACG4G,EAAWC,SAEd,cAAC,IAAD,CAAS/B,GAAI,EAAGrC,SAAUzC,YAAyB,KAAM,OAAzD,SACG4G,EAAWE,aAGhB,eAAC,IAAD,CAAMxG,EAAE,OAAO6G,KAAK,MAAMC,UAAU,SAApC,UACGf,GACC,cAAC,IAAD,CAAK/F,EAAE,MAAMC,GAAG,OAAOuE,GAAI,EAA3B,SACE,eAAC,IAAD,CAAOuC,OAAQhB,EAAOtF,aAAa,KAAnC,UACE,cAAC,IAAD,IACW,YAAVsF,EACG,4BACA,wBAIV,cAAC,IAAD,CACEiB,KAAM,EACN9G,EAAE,OACFK,eAAe,SACf0G,WAAW,SACX3C,OAAO,IALT,SAOE,cAAC,IAAD,CACE4C,cAAe,CACbrE,SAAU,IACVF,QAAS,EACTC,SAAU,EACVc,OAAQ,GAEVyD,SAAU,SAAC5D,GAGNT,EAAWsD,EAAWlB,QAAS,CAC9B3B,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,SACPU,EAAOG,WAQThB,EACEa,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,YACHU,EAAOG,QAEbsC,EAAS,WACTG,EAAWD,EAAU,GACrBV,EACE4B,YAAa,CACXC,WAAY,MACZ3E,WAAY,gBAIhBsD,EAAS,SACTR,EACE4B,YAAa,CACXC,WAAY,OACZ3E,WAAY,cAGZwD,EAAU,GAAGC,EAAWD,EAAU,IAGxCE,EAAWlB,QAAU,CACnB3B,EAAOZ,QACPY,EAAOX,SACPW,EAAOV,SACPU,EAAOG,UAnDb,SAuDG,YAA+B,IAA5B4D,EAA2B,EAA3BA,aAAc/D,EAAa,EAAbA,OACVgE,EAlID,SACrBzF,EACAyD,EACAhC,GAHqB,MASjB,CACJkE,iBAAkB,CACI,MAApBlE,EAAOV,SAAP,UACOf,EADP,sBACyByB,EAAOZ,QADhC,uBACsDY,EAAOX,SAD7D,YACyEW,EAAOC,MADhF,0CAEO1B,EAFP,sBAEyByB,EAAOZ,QAFhC,YAE2CY,EAAOC,MAFlD,0BAEyED,EAAOX,SAFhF,4BAE4GW,EAAOC,MAFnH,0BAGoB,MAApBD,EAAOV,SAAP,UACOf,EADP,sCACqByB,EAAOZ,QAD5B,2EACoDY,EAAOX,SAD3D,YACuEW,EAAOC,MAD9E,kGAEO1B,EAFP,sCAEqByB,EAAOZ,QAF5B,YAEuCY,EAAOC,MAF9C,2EAEoED,EAAOX,SAF3E,iFAEqGW,EAAOC,MAF5G,uHAGA+B,IAiH4BmC,CAAe5F,EAAM+D,EAAU,CAC3CrC,MAAOA,GAAS,QAChBb,QAASY,EAAOZ,QAChBC,SAAUW,EAAOX,SACjBC,SAAUU,EAAOV,WAGnB,OACE,eAAC8E,EAAA,EAAD,CACEC,MAAO,CAAExC,MAAO,QAChB+B,SAAU,SAACU,GACTA,EAAEC,iBACFR,EAAaO,IAJjB,UAOE,eAAC,IAAD,CACE7H,EAAGN,YAAyB,OAAQ,OACpCqI,EAAE,OACFtD,QAAS/E,YAAyB,EAAG,IACrCsI,SACEtI,YAAyB,OAAQ,UAEnCuH,WAAW,aAPb,UASE,cAAC,EAAD,CAAalG,MAAM,GAAGG,GAAG,UAAU+G,IAAK,IACxC,cAAC,EAAD,CACElH,MAAM,GACNG,GAAG,WACHmB,cAAe,CACb,CACEI,aAAc,qBACdvB,GAAI,IACJK,MAAO,KAET,CACEkB,aAAc,eACdvB,GAAI,IACJK,MAAO,QAIb,cAAC,EAAD,CAAaR,MAAM,GAAGG,GAAG,WAAW+G,IAAK,IACzC,cAAC,IAAD,CACErG,WAAW,OACXO,SAAS,MACT+F,GAAI,EACJ3D,UACE7E,YAAyB,SAAU,QAErCM,EAAGN,YAAyB,OAAQ,QAPtC,eAWA,cAAC,EAAD,CACEqB,MAAM,GACNG,GAAG,SACHC,WAAW,8CACXe,KAAM,QAGV,cAAC,IAAD,CAAKlC,EAAE,MAAMC,GAAG,OAAOgF,GAAI,EAA3B,SACE,cAAC,IAAD,CACEkD,KAAK,SACLnI,EAAE,QACFoI,GAAG,OACHlI,EAAE,QAJJ,qBASF,cAAC,IAAD,CACEF,EAAE,MACFC,GAAG,OACHgF,GAAI,EACJrD,WAAY,IACZO,SAAS,KACTqC,GAAI,EANN,SAQE,cAAC,IAAD,CAAMD,UAAU,SAAhB,SAIGgD,EAAME,qBAGX,cAAC,EAAD,CACElE,OAAQA,EACRC,MAAOA,GAAS,SAChBC,SAAUA,YAQtB,eAAC,IAAD,CAAM4E,QAAQ,gBAAgBpB,WAAW,SAAzC,UACE,cAAC,IAAD,CACEqB,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,kBAEfvI,EAAE,QACFwI,UAAU,aACVC,SAAU,cAACC,EAAA,EAAD,IANZ,SAQGpC,EAAWG,WAEbP,GAAW,EACV,cAAC,IAAD,CACEoC,QAAS,SAACT,GACRpC,EAAQ8C,KAAK,QAEfvI,EAAE,QACFwI,UAAU,WACVG,UAAW,cAACC,EAAA,EAAD,IANb,SAQGtC,EAAWI,UAEZ,cAKV,cAAC,IAAD,CAAUmC,GAAG,qBChPN4C,UAnC+B,WAC5C,IAAMjG,EAAWkG,cAEjB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,cACLC,OAAK,EACL9L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAW/E,SAAUA,GAAc+E,OAE1D,cAAC,IAAD,CACEoB,KAAK,gBACL7L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAY/E,SAAUA,GAAc+E,OAE3D,cAAC,IAAD,CACEoB,KAAK,gBACL7L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAW/E,SAAUA,GAAc+E,OAE1D,cAAC,IAAD,CACEoB,KAAK,gBACL7L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAY/E,SAAUA,GAAc+E,OAE3D,cAAC,IAAD,CACEoB,KAAK,gBACL7L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAW/E,SAAUA,GAAc+E,OAE1D,cAAC,IAAD,CACEoB,KAAK,gBACL7L,SAAU,SAACyK,GAAD,OAAW,cAAC,EAAD,aAAW/E,SAAUA,GAAc+E,OAE1D,cAAC,IAAD,CAAU1B,GAAG","file":"static/js/6.ab303b5d.chunk.js","sourcesContent":["export const generateCommonResponsive = <B, L>(base: B, lg: L) => {\n  return {\n    base,\n    lg,\n  };\n};\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { generateCommonResponsive } from '../utils/generateCommonResponsive';\n\ninterface MainFormProps {\n  children: JSX.Element | JSX.Element[] | string;\n  autoHeight?: boolean;\n}\n\nexport const MainForm: React.FC<MainFormProps> = ({ children, autoHeight }) => {\n  return (\n    <Box\n      w='75%'\n      mx='auto'\n      d='flex'\n      flexDirection='column'\n      boxShadow='2xl'\n      p={4}\n      h={generateCommonResponsive('auto', autoHeight ? 'auto' : '600px')}\n      justifyContent='flex-start'\n      bg='whiteAlpha.900'\n      borderRadius='md'\n      pos='relative'\n      overflow='hidden'\n    >\n      {children}\n    </Box>\n  );\n};\n","import {\n  FormControl,\n  FormControlProps,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  FormLabelProps,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputProps,\n  NumberInputStepper,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React from 'react';\n\n//   * When someone presses delete arrow value is NaN so that's why i handle that case\nconst validateNumber = (num: number) => {\n  if (`${num}` === 'NaN') {\n    return 0;\n  }\n\n  return num;\n};\n\ninterface FieldNumberProps extends NumberInputProps {\n  label: string;\n  id: string;\n  labelStyle?: FormLabelProps;\n  formControlStyle?: FormControlProps;\n  helperText?: string | JSX.Element | JSX.Element[];\n  disabled?: boolean;\n}\n\n// Implement FieldHelper inside formControl\nexport const FieldNumber: React.FC<FieldNumberProps> = ({\n  label,\n  labelStyle,\n  formControlStyle,\n  id,\n  helperText,\n  disabled,\n  ...rest\n}) => {\n  const [, { value, error, initialValue }, { setValue }] = useField(id);\n\n  return (\n    <FormControl isDisabled={disabled} {...formControlStyle}>\n      <FormLabel fontWeight={600} {...labelStyle}>\n        {label}\n      </FormLabel>\n      <NumberInput\n        defaultValue={initialValue | 5}\n        id={id}\n        name={id}\n        onChange={(_, _value) => setValue(validateNumber(_value))}\n        step={1}\n        value={validateNumber(value)}\n        bg='white'\n        {...rest}\n      >\n        <NumberInputField />\n        <NumberInputStepper>\n          {!disabled && (\n            <>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </>\n          )}\n        </NumberInputStepper>\n      </NumberInput>\n      {helperText && (\n        <FormHelperText fontSize='xs'>{helperText}</FormHelperText>\n      )}\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n","import {\n  FormControl,\n  FormControlProps,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  FormLabelProps,\n  Select,\n  SelectProps,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React from 'react';\n\ninterface FieldSelectProps extends SelectProps {\n  label: string;\n  id: string;\n  selectOptions: { id: string; value: string | number; displayValue: string }[];\n  labelStyle?: FormLabelProps;\n  formControlStyle?: FormControlProps;\n  helperText?: string;\n}\n\n// Implement FieldHelper inside formControl\nexport const FieldSelect: React.FC<FieldSelectProps> = ({\n  label,\n  labelStyle,\n  formControlStyle,\n  id,\n  selectOptions,\n  helperText,\n  ...rest\n}) => {\n  const [field, { error }] = useField(id);\n  return (\n    <FormControl {...formControlStyle}>\n      <FormLabel fontWeight={600} {...labelStyle}>\n        {label}\n      </FormLabel>\n      <Select {...field} id={id} name={id} bg='white' {...rest}>\n        {selectOptions.map((option) => (\n          <option key={option.id} value={option.value} id={option.id}>\n            {option.displayValue}\n          </option>\n        ))}\n      </Select>\n      {helperText && (\n        <FormHelperText fontSize='xs'>{helperText}</FormHelperText>\n      )}\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n","export type Operator = '+' | '-' | '*' | '/';\nexport const calculator = (\n  operand: number,\n  operand2: number,\n  operator: Operator\n) => {\n  switch (operator) {\n    case '+':\n      return operand + operand2;\n    case '*':\n      return operand * operand2;\n    case '/':\n      return operand / operand2;\n    default:\n      // is -\n      return operand - operand2;\n  }\n};\n","import { Operator } from './calculator';\n\nexport type EqArr = [number, number, Operator, number];\n\nexport const validateEq = (\n  oldValues: EqArr | null | undefined,\n  newValues: EqArr\n) => {\n  if (oldValues) {\n    let same = 0;\n    for (let index in oldValues) {\n      if (oldValues[index] === newValues[index]) {\n        same = same + 1;\n      }\n    }\n\n    // if same is 3, that means equation is same as old one\n    if (same === 4) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return true;\n  }\n};\n","import { Box, HStack, Image, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { FruitsType } from '../types';\nimport { calculator, Operator } from '../utils/calculator';\n\ninterface FruitsDisplayProps {\n  values: {\n    operator: string;\n    operand: number;\n    operand2: number;\n    result: number;\n  };\n  fruit: FruitsType;\n  fruitRef: React.RefObject<HTMLImageElement>;\n}\n\nexport const FruitsDisplay: React.FC<FruitsDisplayProps> = ({\n  values,\n  fruit,\n  fruitRef,\n}) => {\n  let result = calculator(\n    values.operand,\n    values.operand2,\n    values.operator as Operator\n  );\n  // Inteval used for knowing whenever the final result it's plus or minus\n  let interval;\n  if (result < 0) {\n    // - interval\n    interval = 'You own: ';\n\n    // Make sure result is positive\n    result = Math.abs(result);\n  }\n\n  let decimalValue;\n  // If number is decimal\n  if (result % 1 !== 0) {\n    // if 5.5432 -> get the 5432 and first index is 5\n    decimalValue = `${result}`.split('.')[1];\n    if (decimalValue) decimalValue = decimalValue[0];\n    result = Math.floor(result);\n  }\n\n  let prefix: number | undefined;\n  let rest: number | undefined;\n  let fruitArray: any[] = [];\n  let fruitArray2: any[] = [];\n  if (result > 10) {\n    // Seprate them if 55, -> 5 x 10 visual bananas and  5 bananas sepratly\n    prefix = Math.floor(result / 10);\n    fruitArray = Array.from({ length: 10 }, (v, i) => i);\n\n    // This number is from 0-9\n    rest = result % 10;\n    fruitArray2 = Array.from({ length: rest }, (v, i) => i);\n  } else {\n    // Create fruit array with result as length\n    fruitArray = Array.from({ length: result }, (v, i) => i);\n  }\n\n  return (\n    <Box zIndex='1'>\n      {interval && (\n        <Text textAlign='center' fontWeight='600' fontSize='xl' mb={4}>\n          {interval}\n        </Text>\n      )}\n      <HStack spacing={1} maxW='75%' mx='auto'>\n        {prefix && prefix !== 1 ? (\n          <Box\n            flexBasis='auto'\n            minW='110px'\n            fontSize='lg'\n            fontWeight='bold'\n          >{`${prefix} packets of`}</Box>\n        ) : null}\n        {fruitArray.map((f) => (\n          <Box flexBasis='auto' key={f} ref={fruitRef}>\n            <Image\n              src={`/Fruit-Calculator/fruits/${fruit}.png`}\n              h='100%'\n              w='100%'\n              maxH='150px'\n              maxW='150px'\n            />\n          </Box>\n        ))}\n        {decimalValue && fruitArray2.length === 0 ? (\n          <Box flexBasis='auto' fontWeight={600} fontSize='lg' minW='107.5px'>\n            and{' '}\n            {`${decimalValue}-tenths of whole ${fruit} separated in 10 pieces`}\n          </Box>\n        ) : null}\n      </HStack>\n      {fruitArray2.length > 0 ? (\n        <HStack spacing={1} maxW='75%' mx='auto' mt={6}>\n          <Box flexBasis='auto' minW='110px' fontSize='lg' fontWeight='bold'>\n            and\n          </Box>\n          {fruitArray2.map((f) => (\n            <Box\n              flexBasis='auto'\n              key={f}\n              w={fruitRef.current?.getClientRects()[0].width || 'auto'}\n              h={fruitRef.current?.getClientRects()[0].height || 'auto'}\n            >\n              <Image\n                src={`/Fruit-Calculator/fruits/${fruit}.png`}\n                w='100%'\n                h='100%'\n                maxH='150px'\n                maxW='150px'\n              />\n            </Box>\n          ))}\n          {decimalValue ? (\n            <Box flexBasis='auto' fontWeight={600} fontSize='lg' minW='107.5px'>\n              and{' '}\n              {`${decimalValue}-tenths of a whole ${fruit} separated in 10 pieces`}\n            </Box>\n          ) : null}\n        </HStack>\n      ) : null}\n    </Box>\n  );\n};\n","import {\n  Flex,\n  Box,\n  Heading,\n  Text,\n  HStack,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { DispatchFunction } from '../../types/redux';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { initialState } from '../../store/reducers/main';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { MainForm } from '../MainForm';\nimport { FieldNumber } from '../Fields/FieldNumber';\nimport { ArrowBackIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport { FieldSelect } from '../Fields/FieldSelect';\nimport { calculator, Operator } from '../../utils/calculator';\nimport { EqArr, validateEq } from '../../utils/validateEq';\nimport { FruitsDisplay } from '../FruitsDisplay';\nimport { storeResults } from '../../store/actions/main';\nimport { generateCommonResponsive } from '../../utils/generateCommonResponsive';\n\nexport interface FifthFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst lnObjGeneratorStandard = (ln: number) => ({\n  header: [\n    `Let's see how subtraction and addition is done!`,\n    `Ајде да видиме како се прави одземање и собирање!`,\n  ][ln],\n  header2: [\n    `Choose values to see how the final result will change `,\n    `Изберете вредности во полињата долу за да видите како ќе се промени конечниот резултат`,\n  ][ln],\n  btnText2: ['Previous', 'Претходно'][ln],\n  btnText: ['Next', 'Следно'][ln],\n});\n\nconst lnObjGenerator = (\n  name: string,\n  ln: 0 | 1,\n  operations: {\n    operator: string;\n    operand: number;\n    operand2: number;\n    fruit: string;\n  }\n) => ({\n  helperTextFruits: [\n    `${name}, you have ${operations.operand} ${operations.fruit}s and someone ${\n      operations.operator === '+' ? 'gives' : 'takes from'\n    } you ${operations.operand2} ${\n      operations.fruit\n    }s. How many do you have now?`,\n    `${name}, имаш ${operations.operand} ${operations.fruit}s и некој ти  ${\n      operations.operator === '+' ? 'земе' : 'даде'\n    } ${operations.operand2} ${operations.fruit}s. Колку ${\n      operations.fruit\n    }s имаш?`,\n  ][ln],\n});\n\nexport const FifthForm: React.FC<FifthFormProps> = ({ dispatch, history }) => {\n  // This is how you handle useSelector with ypescript\n  // eslint-disable-next-line no-restricted-globals\n  const { name, fruit, correctnessSimple, language } = useSelector<\n    typeof initialState,\n    typeof initialState\n  >((state) => state);\n  const [alert, setAlert] = useState<'success' | 'error' | null>(null);\n  const [guesses, setGuesses] = useState<number>(\n    correctnessSimple?.matches || 0\n  );\n  const previousEq = useRef<EqArr | null>();\n  const fruitRef = useRef<HTMLImageElement>(null);\n\n  const lnObjBasic = lnObjGeneratorStandard(language);\n  return (\n    <MainForm autoHeight>\n      {name ? (\n        <>\n          <Text textAlign='right'>\n            Correct guesses:{' '}\n            <Text as='span' color='green'>\n              {guesses}\n            </Text>{' '}\n            (get 3 correct guesses to continue)\n          </Text>\n          <Box textAlign='center' mb={14} mt={4}>\n            <Heading mb={3} fontSize={generateCommonResponsive('xl', '3xl')}>\n              {lnObjBasic.header}\n            </Heading>\n            <Heading mb={3} fontSize={generateCommonResponsive('xl', '3xl')}>\n              {lnObjBasic.header2}\n            </Heading>\n          </Box>\n          <Flex w='100%' minH='75%' direction='column'>\n            {alert && (\n              <Box w='75%' mx='auto' mb={6}>\n                <Alert status={alert} borderRadius='lg'>\n                  <AlertIcon />\n                  {alert === 'success'\n                    ? 'Correct. You get 1 point!'\n                    : 'Wrong. Try again'}\n                </Alert>\n              </Box>\n            )}\n            <Box\n              flex={3}\n              d='flex'\n              justifyContent='center'\n              alignItems='center'\n              zIndex='2'\n            >\n              <Formik\n                initialValues={{\n                  operator: '+',\n                  operand: 0,\n                  operand2: 0,\n                  result: 0,\n                }}\n                onSubmit={(values) => {\n                  //  if eq is same as old one\n                  if (\n                    !validateEq(previousEq.current, [\n                      values.operand,\n                      values.operand2,\n                      values.operator as Operator,\n                      values.result,\n                    ])\n                  ) {\n                    // don't do nothing\n                    return;\n                  }\n\n                  if (\n                    calculator(\n                      values.operand,\n                      values.operand2,\n                      values.operator as Operator\n                    ) === values.result\n                  ) {\n                    setAlert('success');\n                    setGuesses(guesses + 1);\n                    dispatch(\n                      storeResults({\n                        actionType: 'hit',\n                        calculator: 'simple',\n                      }) as any\n                    );\n                  } else {\n                    setAlert('error');\n                    if (guesses > 0) setGuesses(guesses - 1);\n                    dispatch(\n                      storeResults({\n                        actionType: 'miss',\n                        calculator: 'simple',\n                      }) as any\n                    );\n                  }\n\n                  previousEq.current = [\n                    values.operand,\n                    values.operand2,\n                    values.operator as Operator,\n                    values.result,\n                  ];\n                }}\n              >\n                {({ handleSubmit, values }) => {\n                  const lnObj = lnObjGenerator(name, language, {\n                    fruit: fruit || 'apple',\n                    operand: values.operand,\n                    operand2: values.operand2,\n                    operator: values.operator,\n                  });\n                  return (\n                    <Form\n                      style={{ width: '100%' }}\n                      onSubmit={(e) => {\n                        e.preventDefault();\n                        handleSubmit(e);\n                      }}\n                    >\n                      <HStack\n                        w={generateCommonResponsive('100%', '70%')}\n                        m='auto'\n                        spacing={generateCommonResponsive(1, 10)}\n                        flexWrap={\n                          generateCommonResponsive('wrap', 'nowrap') as any\n                        }\n                        alignItems='flex-start'\n                      >\n                        <FieldNumber label='' id='operand' min={0} />\n                        <FieldSelect\n                          label=''\n                          id='operator'\n                          selectOptions={[\n                            {\n                              displayValue: '+ (Addition)',\n                              id: '+',\n                              value: '+',\n                            },\n                            {\n                              displayValue: '- (Subtraction)',\n                              id: '-',\n                              value: '-',\n                            },\n                          ]}\n                        />\n                        <FieldNumber label='' id='operand2' min={0} />\n                        <Text\n                          fontWeight='bold'\n                          fontSize='2xl'\n                          pt={2}\n                          textAlign={\n                            generateCommonResponsive('center', 'left') as any\n                          }\n                          w={generateCommonResponsive('100%', 'auto') as any}\n                        >\n                          =\n                        </Text>\n                        <FieldNumber\n                          label=''\n                          id='result'\n                          helperText='Use the bananas bellow and guess the result'\n                        />\n                      </HStack>\n                      <Box w='70%' mx='auto' mt={6}>\n                        <PrimaryButton\n                          type='submit'\n                          w='150px'\n                          ml='auto'\n                          d='block'\n                        >\n                          Guess\n                        </PrimaryButton>\n                      </Box>\n                      <Box\n                        w='80%'\n                        mx='auto'\n                        mt={6}\n                        fontWeight={600}\n                        fontSize='xl'\n                        mb={4}\n                      >\n                        <Text textAlign='center'>\n                          {/* {`${name}, you have ${\n                            values.operand\n                          } ${fruit}s and someone ${\n                            values.operator === '+' ? 'gives' : 'takes from'\n                          } you ${\n                            values.operand2\n                          } ${fruit}s. How many do you have now?`} */}\n                          {lnObj.helperTextFruits}\n                        </Text>\n                      </Box>\n                      <FruitsDisplay\n                        values={values}\n                        fruit={fruit || 'banana'}\n                        fruitRef={fruitRef}\n                      />\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Box>\n            <Flex justify='space-between'>\n              <PrimaryButton\n                onClick={(e) => {\n                  history.push('/calculator/3');\n                }}\n                w='120px'\n                alignSelf='flex-start'\n                leftIcon={<ArrowBackIcon />}\n              >\n                {lnObjBasic.btnText2}\n              </PrimaryButton>\n              {guesses >= 3 ? (\n                <PrimaryButton\n                  onClick={(e) => {\n                    history.push('/calculator/5');\n                  }}\n                  w='120px'\n                  alignSelf='flex-end'\n                  rightIcon={<ArrowForwardIcon />}\n                >\n                  {lnObjBasic.btnText}\n                </PrimaryButton>\n              ) : null}\n            </Flex>\n          </Flex>\n        </>\n      ) : (\n        <Redirect to='/calculator' />\n      )}\n    </MainForm>\n  );\n};\n","import { Box, Text, Image, Flex } from '@chakra-ui/react';\nimport React from 'react';\nimport { generateCommonResponsive } from '../utils/generateCommonResponsive';\n\ninterface FruitsProps {\n  href: string;\n  onClick:\n    | ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\n    | undefined;\n  text: string;\n  color: string;\n}\n\nexport const Fruit: React.FC<FruitsProps> = ({\n  href,\n  onClick,\n  text,\n  color,\n}) => {\n  return (\n    <Flex\n      cursor='pointer'\n      mr={generateCommonResponsive(2, 10)}\n      transition='all 0.2s'\n      _hover={{\n        bg: `${color}.100`,\n      }}\n      onClick={onClick}\n      w={generateCommonResponsive('33%', '300px')}\n      borderRadius='md'\n      direction='column'\n      justify='flex-end'\n    >\n      {/* <Image src={href} h='90px' w='100%' /> */}\n      <Image\n        src={href}\n        w='100%'\n        mb={2}\n        p={4}\n        h={generateCommonResponsive('100%', undefined)}\n      />\n      <Text\n        bg={color}\n        textAlign='center'\n        fontWeight={600}\n        p={1}\n        borderRadius='md'\n      >\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n","import { Flex, Box, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DispatchFunction } from '../../types/redux';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { initialState } from '../../store/reducers/main';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { MainForm } from '../MainForm';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Fruit } from '../Fruit';\nimport { FruitsType } from '../../types';\n\ninterface FourthFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst fruits: {\n  fruit: FruitsType;\n  img: string;\n  text: [string, string];\n  color: string;\n}[] = [\n  {\n    fruit: 'banana',\n    img: `/Fruit-Calculator/fruits/banana.png`,\n    text: ['Banana', 'Банана'],\n    color: 'yellow',\n  },\n  {\n    fruit: 'apple',\n    img: `/Fruit-Calculator/fruits/apple.png`,\n    text: ['Apple', 'Јаболко'],\n    color: 'green',\n  },\n  {\n    fruit: 'orange',\n    img: `/Fruit-Calculator/fruits/orange.png`,\n    text: ['Orange', 'Портокал'],\n    color: 'orange',\n  },\n];\n\nconst lnObjGenerator = (name: string, ln: 0 | 1) => ({\n  header: [\n    `Select your favourite fruit, ${name}:`,\n    `Одбери го твоето омилено овошје, ${name}:`,\n  ][ln],\n  btnText2: ['Previous', 'Претходно'][ln],\n});\n\nexport const FourthForm: React.FC<FourthFormProps> = ({\n  dispatch,\n  history,\n}) => {\n  const { name, language } = useSelector<\n    typeof initialState,\n    typeof initialState\n  >((state) => state);\n\n  const fruitHandler = (fruit: 'banana' | 'orange' | 'apple') => {\n    dispatch({\n      type: 'BATCH',\n      payload: {\n        fruit,\n      },\n    });\n    history.push('/calculator/4');\n  };\n\n  const lnObj = lnObjGenerator(name, language);\n\n  return (\n    <MainForm>\n      {name ? (\n        <>\n          <Box textAlign='center' mb={14} mt={4}>\n            <Heading letterSpacing='2px' mb={3}>\n              {lnObj.header}\n            </Heading>\n          </Box>\n          <Flex\n            w='100%'\n            h='75%'\n            overflow='hidden'\n            justify='space-evenly'\n            alignItems='stretch'\n            mb={8}\n          >\n            {fruits.map((fruit) => (\n              <Fruit\n                key={fruit.fruit}\n                color={fruit.color}\n                href={fruit.img}\n                text={fruit.text[language]}\n                onClick={() => fruitHandler(fruit.fruit)}\n              />\n            ))}\n          </Flex>\n          <PrimaryButton\n            onClick={(e) => {\n              history.push('/calculator/2');\n            }}\n            w='120px'\n            // mt={10}\n            // alignSelf='flex-start'\n            leftIcon={<ArrowBackIcon />}\n          >\n            {lnObj.btnText2}\n          </PrimaryButton>\n        </>\n      ) : (\n        <Redirect to='/calculator' />\n      )}\n    </MainForm>\n  );\n};\n","import { Flex, Box, Heading, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DispatchFunction } from '../../types/redux';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { initialState, reducer } from '../../store/reducers/main';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { MainForm } from '../MainForm';\nimport { ArrowBackIcon, CheckIcon, CloseIcon } from '@chakra-ui/icons';\nimport { generateCommonResponsive } from '../../utils/generateCommonResponsive';\n\ninterface ThirdFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst lnObjGenerator = (name: string, ln: 0 | 1) => ({\n  header: [\n    `Do you want to learn math, ${name}?`,\n    `Дали сакаш да научиш математика, ${name}`,\n  ][ln],\n  yes: [`YES`, `ДА`][ln],\n  no: ['NO', 'НЕ'][ln],\n  btnText2: ['Previous', 'Претходно'][ln],\n});\n\nexport const ThirdForm: React.FC<ThirdFormProps> = ({ dispatch, history }) => {\n  const { name, language } = useSelector<\n    typeof initialState,\n    ReturnType<typeof reducer>\n  >((state) => state);\n\n  const learnMathHandler = (value: boolean) => {\n    dispatch({ type: 'BATCH', payload: { learnMath: false } });\n    history.push('/calculator/3');\n  };\n\n  const lnObj = lnObjGenerator(name, language);\n\n  return (\n    <MainForm>\n      {name ? (\n        <>\n          <Box textAlign='center' mb={14} mt={4}>\n            <Heading letterSpacing='2px' mb={3}>\n              {lnObj.header}\n            </Heading>\n          </Box>\n          <Flex\n            w='100%'\n            h='75%'\n            overflow='hidden'\n            justify='center'\n            alignItems='center'\n            mb={generateCommonResponsive(8, 'none')}\n          >\n            <Box\n              cursor='pointer'\n              mr={10}\n              transition='all 0.2s'\n              _hover={{\n                bg: 'green.100',\n              }}\n              onClick={() => learnMathHandler(true)}\n            >\n              <CheckIcon color='green' w={20} h={14} />\n              <Text\n                color='white'\n                bg='green'\n                textAlign='center'\n                fontWeight={600}\n              >\n                {lnObj.yes}\n              </Text>\n            </Box>\n            <Box\n              cursor='pointer'\n              w='75px'\n              transition='all 0.2s'\n              _hover={{\n                bg: 'red.100',\n              }}\n              onClick={() => learnMathHandler(false)}\n            >\n              <CloseIcon color='red' w={10} h={14} mx='auto' d='block' />\n              <Text color='white' bg='red' textAlign='center' fontWeight={600}>\n                {lnObj.no}\n              </Text>\n            </Box>\n          </Flex>\n          <PrimaryButton\n            onClick={(e) => {\n              history.push('/calculator/1');\n            }}\n            w='120px'\n            // mt={10}\n            // alignSelf='flex-start'\n            leftIcon={<ArrowBackIcon />}\n          >\n            {lnObj.btnText2}\n          </PrimaryButton>\n        </>\n      ) : (\n        <Redirect to='/calculator' />\n      )}\n    </MainForm>\n  );\n};\n","import {\n  FormControl,\n  FormControlProps,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  FormLabelProps,\n  Input,\n  InputProps,\n} from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React from 'react';\nimport { InputHTMLAttributes } from 'react';\n\ntype FieldInputProps = InputHTMLAttributes<HTMLInputElement> & {\n  labelStyle?: FormLabelProps;\n  formControlStyle?: FormControlProps;\n  name: string;\n  label: string;\n  turnOffAutoComplete?: boolean;\n  required?: boolean;\n  helperText?: string;\n} & InputProps;\n\nconst FieldInput: React.FC<FieldInputProps> = ({\n  labelStyle,\n  formControlStyle,\n  turnOffAutoComplete,\n  required,\n  label,\n  size: _,\n  style,\n  helperText,\n  ...props\n}) => {\n  const [field, { error }] = useField(props);\n  return (\n    <FormControl\n      isInvalid={!!error}\n      isRequired={required}\n      {...formControlStyle}\n    >\n      <FormLabel htmlFor={props.name} fontWeight={600} {...labelStyle}>\n        {label}{' '}\n      </FormLabel>\n      <Input\n        {...field}\n        id={props.name}\n        autoComplete={turnOffAutoComplete ? 'off' : 'on'}\n        bg='white'\n        {...props}\n      />\n      {helperText && (\n        <FormHelperText fontSize='xs'>{helperText}</FormHelperText>\n      )}\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport default FieldInput;\n","import { Flex, Box, VStack, Image, Heading } from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { DispatchFunction } from '../../types/redux';\nimport FieldInput from '../Fields/FieldInput';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { initialState, reducer } from '../../store/reducers/main';\nimport { RouteChildrenProps } from 'react-router-dom';\nimport { MainForm } from '../MainForm';\nimport { generateCommonResponsive } from '../../utils/generateCommonResponsive';\n\ninterface FirstFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst lnObj = {\n  header: ['Hello!', 'Здраво!'],\n  header2: [\n    'Today we are going to learn about basic arithmetic operations',\n    'Денес ќе учиме за основните аритметички операции',\n  ],\n  label: ['First, enter your name', 'Прво, внесете го вашето име'],\n  label2: ['Second, enter your surname', 'Второ, внесете го вашето презиме'],\n  btnText: ['Next', 'Следно'],\n};\n\nexport const FirstForm: React.FC<FirstFormProps> = ({ dispatch, history }) => {\n  const { name, surname, language: ln } = useSelector<\n    typeof initialState,\n    ReturnType<typeof reducer>\n  >((state) => state);\n\n  return (\n    <MainForm>\n      <Box textAlign='center' mb={14} mt={4}>\n        <Heading\n          letterSpacing='2px'\n          mb={3}\n          fontSize={generateCommonResponsive('2xl', '3xl')}\n        >\n          {lnObj.header[ln]}\n        </Heading>\n        <Heading fontSize={generateCommonResponsive('xl', '3xl')}>\n          {lnObj.header2[ln]}\n        </Heading>\n      </Box>\n      <Flex w='100%' h='75%' overflow='hidden'>\n        <Box\n          flex={3}\n          d='flex'\n          justifyContent='center'\n          alignItems='center'\n          zIndex={1}\n        >\n          <Formik\n            initialValues={{ name: name || '', surname: surname || '' }}\n            onSubmit={(values) => {\n              dispatch({\n                type: 'BATCH',\n                payload: values,\n              });\n              // Go to second page\n              history.push('/calculator/1');\n            }}\n          >\n            {({ handleSubmit }) => (\n              <Form\n                style={{ width: '100%' }}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleSubmit(e);\n                }}\n              >\n                <VStack\n                  w={generateCommonResponsive('100%', '70%')}\n                  m='auto'\n                  spacing={10}\n                >\n                  <FieldInput\n                    label={lnObj.label[ln]}\n                    name='name'\n                    placeholder='First Name'\n                    required\n                  />\n                  <FieldInput\n                    label={lnObj.label2[ln]}\n                    name='surname'\n                    placeholder='Surname'\n                    required\n                  />\n                  <PrimaryButton\n                    type='submit'\n                    alignSelf='flex-end'\n                    w={generateCommonResponsive('100%', '150px')}\n                  >\n                    {lnObj.btnText[ln]}\n                  </PrimaryButton>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n        <Box\n          flex={1}\n          h={generateCommonResponsive('50%', '100%')}\n          pos={generateCommonResponsive('absolute', 'static') as any}\n          right={0}\n          bottom={4}\n        >\n          <Image\n            src='https://i.pinimg.com/originals/d0/82/d2/d082d2fe54e5d21a251e5daeda61f10d.png'\n            h='100%'\n            mx='auto'\n          />\n        </Box>\n      </Flex>\n    </MainForm>\n  );\n};\n","import { Flex, Box, VStack, Image, Heading } from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { DispatchFunction } from '../../types/redux';\nimport FieldInput from '../Fields/FieldInput';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { initialState, reducer } from '../../store/reducers/main';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { MainForm } from '../MainForm';\nimport { FieldNumber } from '../Fields/FieldNumber';\nimport { ArrowBackIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport { generateCommonResponsive } from '../../utils/generateCommonResponsive';\n\ninterface SecondFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst lnObjGenerator = (name: string, ln: 0 | 1) => ({\n  header: [`Welcome ${name}`, `Добро дојде, ${name}`][ln],\n  label: [`What city do you live in ${name}?`, `Каде живееш ${name}?`][ln],\n  label2: [`How old are you ${name}?`, `Колку години имаш ${name}?`][ln],\n  btnText: ['Next', 'Следно'][ln],\n  btnText2: ['Previous', 'Претходно'][ln],\n});\n\nexport const SecondForm: React.FC<SecondFormProps> = ({\n  dispatch,\n  history,\n}) => {\n  // This is how you handle useSelector with ypescript\n  // eslint-disable-next-line no-restricted-globals\n  const { name, city, age, language } = useSelector<\n    typeof initialState,\n    ReturnType<typeof reducer>\n  >((state) => state);\n\n  const ln = lnObjGenerator(name, language);\n\n  return (\n    <MainForm>\n      {name ? (\n        <>\n          <Box textAlign='center' mb={14} mt={4}>\n            <Heading letterSpacing='2px' mb={3}>\n              {ln.header}\n            </Heading>\n          </Box>\n          <Flex w='100%' h='75%' direction='column' overflow='hidden'>\n            <Box\n              flex={3}\n              d='flex'\n              justifyContent='center'\n              alignItems='center'\n              zIndex='2'\n            >\n              <Formik\n                initialValues={{ age: age || 5, city: city || '' }}\n                onSubmit={(values) => {\n                  dispatch({\n                    type: 'BATCH',\n                    payload: values,\n                  });\n                  // Go to second page\n                  history.push('/calculator/2');\n                }}\n              >\n                {({ handleSubmit }) => (\n                  <Form\n                    style={{ width: '100%' }}\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      handleSubmit(e);\n                    }}\n                  >\n                    <VStack\n                      w={generateCommonResponsive('100%', '70%')}\n                      m='auto'\n                      spacing={10}\n                      mb={generateCommonResponsive('80px', 'none')}\n                    >\n                      <FieldInput\n                        label={ln.label}\n                        name='city'\n                        placeholder='City'\n                        required\n                      />\n                      <FieldNumber\n                        label={ln.label2}\n                        id='age'\n                        placeholder='Age'\n                        formControlStyle={{\n                          isRequired: true,\n                        }}\n                      />\n                    </VStack>\n                    <PrimaryButton\n                      type='submit'\n                      alignSelf='flex-end'\n                      w='120px'\n                      pos='absolute'\n                      bottom={4}\n                      right={4}\n                      rightIcon={<ArrowForwardIcon />}\n                    >\n                      {ln.btnText}\n                    </PrimaryButton>\n                  </Form>\n                )}\n              </Formik>\n            </Box>\n            <Box\n              flex={generateCommonResponsive('none', 1)}\n              h={generateCommonResponsive('250px', '100%')}\n              pos={generateCommonResponsive('absolute', 'static') as any}\n              zIndex='1'\n              bottom={0}\n            >\n              <Image\n                src='http://vtxcski.org/img/c1e74532a2196f4fc026c638d94ac6cb.png'\n                h='100%'\n                mx='auto'\n                bottom='180px'\n                left='100px'\n                pos={generateCommonResponsive(undefined, 'relative') as any}\n                transform={\n                  generateCommonResponsive(undefined, 'rotate(15deg)') as any\n                }\n              />\n            </Box>\n            <PrimaryButton\n              onClick={(e) => {\n                history.push('/calculator');\n              }}\n              w='120px'\n              // mt={10}\n              // alignSelf='flex-start'\n              leftIcon={<ArrowBackIcon />}\n              pos='absolute'\n              bottom={4}\n            >\n              {ln.btnText2}\n            </PrimaryButton>\n          </Flex>\n        </>\n      ) : (\n        <Redirect to='/calculator' />\n      )}\n    </MainForm>\n  );\n};\n","import {\n  Flex,\n  Box,\n  Heading,\n  Text,\n  HStack,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Redirect, RouteChildrenProps } from 'react-router-dom';\nimport { ArrowBackIcon, ArrowForwardIcon } from '@chakra-ui/icons';\nimport { PrimaryButton } from '../UI/Buttons';\nimport { storeResults } from '../../store/actions/main';\nimport { initialState } from '../../store/reducers/main';\nimport { DispatchFunction } from '../../types/redux';\nimport { Operator, calculator } from '../../utils/calculator';\nimport { EqArr, validateEq } from '../../utils/validateEq';\nimport { FieldNumber } from '../Fields/FieldNumber';\nimport { FieldSelect } from '../Fields/FieldSelect';\nimport { FruitsDisplay } from '../FruitsDisplay';\nimport { MainForm } from '../MainForm';\nimport { generateCommonResponsive } from '../../utils/generateCommonResponsive';\n\nexport interface SixthFormProps extends RouteChildrenProps {\n  dispatch: DispatchFunction<typeof initialState>;\n}\n\nconst lnObjGeneratorStandard = (ln: number) => ({\n  header: [\n    `Let's see how multiplication and division is done!`,\n    `Ајде да видиме како се прави множење и делење!`,\n  ][ln],\n  header2: [\n    `Choose values to see how the final result will change `,\n    `Изберете вредности во полињата долу за да видите како ќе се промени конечниот резултат`,\n  ][ln],\n  btnText2: ['Previous', 'Претходно'][ln],\n  btnText: ['Final Results', 'Резултати'][ln],\n});\n\nconst lnObjGenerator = (\n  name: string,\n  ln: 0 | 1,\n  values: {\n    operator: string;\n    operand: number;\n    operand2: number;\n    fruit: string;\n  }\n) => ({\n  helperTextFruits: [\n    values.operator === '*'\n      ? `${name}, you have ${values.operand} packets of ${values.operand2} ${values.fruit}s. How many do you have now?`\n      : `${name}, you have ${values.operand} ${values.fruit}s separated in ${values.operand2} packs, how many ${values.fruit}s does each pack have?`,\n    values.operator === '*'\n      ? `${name}, имаш ${values.operand} пакети од по ${values.operand2} ${values.fruit}s. Колку имаш сега?`\n      : `${name}, имаш ${values.operand} ${values.fruit}s поделени во ${values.operand2} пакети, Колку ${values.fruit}s има секој од пакетите?`,\n  ][ln],\n});\n\nexport const SixthForm: React.FC<SixthFormProps> = ({ dispatch, history }) => {\n  // This is how you handle useSelector with ypescript\n  const {\n    name,\n    fruit,\n    correctnessAdvanced,\n    correctnessSimple,\n    language,\n  } = useSelector<typeof initialState, typeof initialState>((state) => state);\n  const [alert, setAlert] = useState<'success' | 'error' | null>(null);\n  const [guesses, setGuesses] = useState<number>(\n    correctnessAdvanced?.matches || 0\n  );\n  const previousEq = useRef<EqArr | null>();\n  const fruitRef = useRef<HTMLImageElement>(null);\n\n  const lnObjBasic = lnObjGeneratorStandard(language);\n  return (\n    <MainForm autoHeight>\n      {name && correctnessSimple ? (\n        <>\n          <Text textAlign='right'>\n            Correct guesses:{' '}\n            <Text as='span' color='green'>\n              {guesses}\n            </Text>{' '}\n            (get 3 correct guesses to continue)\n          </Text>\n          <Box textAlign='center' mb={14} mt={4}>\n            <Heading mb={3} fontSize={generateCommonResponsive('xl', '3xl')}>\n              {lnObjBasic.header}\n            </Heading>\n            <Heading mb={3} fontSize={generateCommonResponsive('xl', '3xl')}>\n              {lnObjBasic.header2}\n            </Heading>\n          </Box>\n          <Flex w='100%' minH='75%' direction='column'>\n            {alert && (\n              <Box w='75%' mx='auto' mb={6}>\n                <Alert status={alert} borderRadius='lg'>\n                  <AlertIcon />\n                  {alert === 'success'\n                    ? 'Correct. You get 1 point!'\n                    : 'Wrong. Try again'}\n                </Alert>\n              </Box>\n            )}\n            <Box\n              flex={3}\n              d='flex'\n              justifyContent='center'\n              alignItems='center'\n              zIndex='2'\n            >\n              <Formik\n                initialValues={{\n                  operator: '*',\n                  operand: 0,\n                  operand2: 0,\n                  result: 0,\n                }}\n                onSubmit={(values) => {\n                  //  if eq is same as old one\n                  if (\n                    !validateEq(previousEq.current, [\n                      values.operand,\n                      values.operand2,\n                      values.operator as Operator,\n                      values.result,\n                    ])\n                  ) {\n                    // don't do nothing\n                    return;\n                  }\n\n                  if (\n                    calculator(\n                      values.operand,\n                      values.operand2,\n                      values.operator as Operator\n                    ) === values.result\n                  ) {\n                    setAlert('success');\n                    setGuesses(guesses + 1);\n                    dispatch(\n                      storeResults({\n                        actionType: 'hit',\n                        calculator: 'advanced',\n                      }) as any\n                    );\n                  } else {\n                    setAlert('error');\n                    dispatch(\n                      storeResults({\n                        actionType: 'miss',\n                        calculator: 'advanced',\n                      }) as any\n                    );\n                    if (guesses > 0) setGuesses(guesses - 1);\n                  }\n\n                  previousEq.current = [\n                    values.operand,\n                    values.operand2,\n                    values.operator as Operator,\n                    values.result,\n                  ];\n                }}\n              >\n                {({ handleSubmit, values }) => {\n                  const lnObj = lnObjGenerator(name, language, {\n                    fruit: fruit || 'apple',\n                    operand: values.operand,\n                    operand2: values.operand2,\n                    operator: values.operator,\n                  });\n\n                  return (\n                    <Form\n                      style={{ width: '100%' }}\n                      onSubmit={(e) => {\n                        e.preventDefault();\n                        handleSubmit(e);\n                      }}\n                    >\n                      <HStack\n                        w={generateCommonResponsive('100%', '70%')}\n                        m='auto'\n                        spacing={generateCommonResponsive(1, 10)}\n                        flexWrap={\n                          generateCommonResponsive('wrap', 'nowrap') as any\n                        }\n                        alignItems='flex-start'\n                      >\n                        <FieldNumber label='' id='operand' min={0} />\n                        <FieldSelect\n                          label=''\n                          id='operator'\n                          selectOptions={[\n                            {\n                              displayValue: '* (multiplication)',\n                              id: '*',\n                              value: '*',\n                            },\n                            {\n                              displayValue: '/ (devision)',\n                              id: '/',\n                              value: '/',\n                            },\n                          ]}\n                        />\n                        <FieldNumber label='' id='operand2' min={0} />\n                        <Text\n                          fontWeight='bold'\n                          fontSize='2xl'\n                          pt={2}\n                          textAlign={\n                            generateCommonResponsive('center', 'left') as any\n                          }\n                          w={generateCommonResponsive('100%', 'auto') as any}\n                        >\n                          =\n                        </Text>\n                        <FieldNumber\n                          label=''\n                          id='result'\n                          helperText='Use the bananas bellow and guess the result'\n                          step={0.5}\n                        />\n                      </HStack>\n                      <Box w='70%' mx='auto' mt={6}>\n                        <PrimaryButton\n                          type='submit'\n                          w='150px'\n                          ml='auto'\n                          d='block'\n                        >\n                          Guess\n                        </PrimaryButton>\n                      </Box>\n                      <Box\n                        w='80%'\n                        mx='auto'\n                        mt={6}\n                        fontWeight={600}\n                        fontSize='xl'\n                        mb={4}\n                      >\n                        <Text textAlign='center'>\n                          {/* {values.operator === '*'\n                            ? `${name}, you have ${values.operand} packets of ${values.operand2} ${fruit}. How many do you have now?`\n                            : `${name}, you have ${values.operand} ${fruit} separated in ${values.operand2} packs, how many apples does each pack have?`} */}\n                          {lnObj.helperTextFruits}\n                        </Text>\n                      </Box>\n                      <FruitsDisplay\n                        values={values}\n                        fruit={fruit || 'banana'}\n                        fruitRef={fruitRef}\n                      />\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Box>\n\n            <Flex justify='space-between' alignItems='center'>\n              <PrimaryButton\n                onClick={(e) => {\n                  history.push('/calculator/4');\n                }}\n                w='120px'\n                alignSelf='flex-start'\n                leftIcon={<ArrowBackIcon />}\n              >\n                {lnObjBasic.btnText2}\n              </PrimaryButton>\n              {guesses >= 3 ? (\n                <PrimaryButton\n                  onClick={(e) => {\n                    history.push('/me');\n                  }}\n                  w='150px'\n                  alignSelf='flex-end'\n                  rightIcon={<ArrowForwardIcon />}\n                >\n                  {lnObjBasic.btnText}\n                </PrimaryButton>\n              ) : null}\n            </Flex>\n          </Flex>\n        </>\n      ) : (\n        <Redirect to='/calculator/4' />\n      )}\n    </MainForm>\n  );\n};\n","import { Box, Heading } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect, Route, RouteChildrenProps, Switch } from 'react-router-dom';\n// Lazy load this\nimport { FifthForm } from '../components/Forms/FifthForm';\nimport { FourthForm } from '../components/Forms/FourthForm';\nimport { ThirdForm } from '../components/Forms/ThirdForm';\nimport { FirstForm } from '../components/Forms/FirstForm';\nimport { initialState } from '../store/reducers/main';\nimport { DispatchFunction } from '../types/redux';\nimport { SecondForm } from '../components/Forms/SecondForm';\nimport { SixthForm } from '../components/Forms/SixthForm';\n\n// Experimental. Inital state types\n\ninterface CalculatorProps extends RouteChildrenProps {}\n\n// Good workflow for redux/reducer/dispatch typescript. Fix it tommorow completly:\n// 1. Isolate reducer to a diff file (and add specific types for that reducer, for it's initial values)\n// 2. Create action creators and union them/ join them inside the ActionType, type propery all so it has auto complete (DEFINE ALL THE TYPES as const)\n// 3. Create sepearet type for dispatch funcions that accepts something similar like the code bellow\nconst Calculator: React.FC<CalculatorProps> = () => {\n  const dispatch = useDispatch<DispatchFunction<typeof initialState>>();\n\n  return (\n    <Switch>\n      <Route\n        path='/calculator'\n        exact\n        children={(props) => <FirstForm dispatch={dispatch} {...props} />}\n      />\n      <Route\n        path='/calculator/1'\n        children={(props) => <SecondForm dispatch={dispatch} {...props} />}\n      />\n      <Route\n        path='/calculator/2'\n        children={(props) => <ThirdForm dispatch={dispatch} {...props} />}\n      />\n      <Route\n        path='/calculator/3'\n        children={(props) => <FourthForm dispatch={dispatch} {...props} />}\n      />\n      <Route\n        path='/calculator/4'\n        children={(props) => <FifthForm dispatch={dispatch} {...props} />}\n      />\n      <Route\n        path='/calculator/5'\n        children={(props) => <SixthForm dispatch={dispatch} {...props} />}\n      />\n      <Redirect to='/calculator' />\n    </Switch>\n  );\n};\n\nexport default Calculator;\n"],"sourceRoot":""}