{"version":3,"sources":["utils/generateCommonResponsive.ts","components/MainForm.tsx","pages/Me.tsx"],"names":["generateCommonResponsive","base","lg","MainForm","children","autoHeight","w","mx","d","flexDirection","boxShadow","p","h","justifyContent","bg","borderRadius","pos","overflow","Me","ln","useSelector","state","name","surname","correctnessAdvanced","correctnessSimple","age","city","language","dispatch","useDispatch","lnObj","hits","misses","accuracity","borderBottom","borderColor","alignItems","as","fontSize","mb","label","aria-label","cursor","_hover","color","onClick","resetScore","spacing","ArrowForwardIcon","fontWeight","to","CheckCircleIcon","matches","WarningTwoIcon","InfoIcon","ratio","toFixed"],"mappings":"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","file":"static/js/7.3c45b4ad.chunk.js","sourcesContent":["export const generateCommonResponsive = <B, L>(base: B, lg: L) => {\n  return {\n    base,\n    lg,\n  };\n};\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { generateCommonResponsive } from '../utils/generateCommonResponsive';\n\ninterface MainFormProps {\n  children: JSX.Element | JSX.Element[] | string;\n  autoHeight?: boolean;\n}\n\nexport const MainForm: React.FC<MainFormProps> = ({ children, autoHeight }) => {\n  return (\n    <Box\n      w='75%'\n      mx='auto'\n      d='flex'\n      flexDirection='column'\n      boxShadow='2xl'\n      p={4}\n      h={generateCommonResponsive('auto', autoHeight ? 'auto' : '600px')}\n      justifyContent='flex-start'\n      bg='whiteAlpha.900'\n      borderRadius='md'\n      pos='relative'\n      overflow='hidden'\n    >\n      {children}\n    </Box>\n  );\n};\n","import {\n  ArrowForwardIcon,\n  CheckCircleIcon,\n  InfoIcon,\n  RepeatIcon,\n  WarningTwoIcon,\n} from '@chakra-ui/icons';\nimport {\n  Box,\n  Heading,\n  List,\n  ListIcon,\n  ListItem,\n  Text,\n  Tooltip,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { MainForm } from '../components/MainForm';\nimport { resetScore } from '../store/actions/main';\nimport { initialState } from '../store/reducers/main';\n\ninterface MeProps {}\n\nconst lnObjGenerator = (ln: number) => ({\n  name: ['Name', 'Име'][ln],\n  surname: ['Surname', 'Презиме'][ln],\n  age: ['Age', 'Години'][ln],\n  city: ['City', 'Град'][ln],\n  hits: ['Hits', 'Точни погодоци'][ln],\n  misses: ['Misses', 'Грешни погодоци'][ln],\n  accuracity: ['Accuracity', 'Точност'][ln],\n});\n\nconst Me: React.FC<MeProps> = ({}) => {\n  const {\n    name,\n    surname,\n    correctnessAdvanced,\n    correctnessSimple,\n    age,\n    city,\n    language,\n  } = useSelector<typeof initialState, typeof initialState>((state) => state);\n  const dispatch = useDispatch();\n\n  const lnObj = lnObjGenerator(language);\n  return (\n    <MainForm autoHeight>\n      <Box borderBottom='1px solid gray' borderColor='gray.300' p={4}>\n        <Box d='flex' justifyContent='space-between' alignItems='center'>\n          <Heading as='h2' fontSize='3xl' mb={4}>\n            {`Account Stats, ${name} ${surname} (${age})`}\n          </Heading>\n          <Tooltip label='Refresh score' aria-label='A tooltip'>\n            <RepeatIcon\n              fontSize='2xl'\n              cursor='pointer'\n              _hover={{\n                color: 'gray.500',\n              }}\n              onClick={() => dispatch(resetScore())}\n            />\n          </Tooltip>\n        </Box>\n        <List spacing={3}>\n          <ListItem fontSize='lg'>\n            <ListIcon as={ArrowForwardIcon} />\n            {lnObj.name}:{' '}\n            {name ? (\n              <Text as='span' fontWeight='600'>\n                {name}{' '}\n              </Text>\n            ) : (\n              <Link to='/calculator'>Add</Link>\n            )}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={ArrowForwardIcon} />\n            {lnObj.surname}:{' '}\n            {surname ? (\n              <Text as='span' fontWeight='600'>\n                {surname}\n              </Text>\n            ) : (\n              <Link to='/calculator'>Add</Link>\n            )}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={ArrowForwardIcon} />\n            {lnObj.age}:{' '}\n            {age ? (\n              <Text as='span' fontWeight='600'>\n                {age}\n              </Text>\n            ) : (\n              <Link to='/calculator/1'>Add</Link>\n            )}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={ArrowForwardIcon} />\n            {lnObj.city}:{' '}\n            {city ? (\n              <Text as='span' fontWeight='600'>\n                {city}\n              </Text>\n            ) : (\n              <Link to='/calculator/1'>Add</Link>\n            )}\n          </ListItem>\n        </List>\n      </Box>\n      <Box borderBottom='1px solid gray' borderColor='gray.300' p={4}>\n        <Heading as='h2' fontSize='3xl' mb={4}>\n          Substraction and addition results:\n        </Heading>\n        <List spacing={3}>\n          <ListItem fontSize='lg'>\n            <ListIcon as={CheckCircleIcon} color='green.500' />\n            {lnObj.hits}: {correctnessSimple?.matches || 0}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={WarningTwoIcon} color='red.500' />\n            {lnObj.misses}: {correctnessSimple?.misses || 0}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={InfoIcon} color='yellow.500' />\n            {lnObj.accuracity}: {correctnessSimple?.ratio?.toFixed(2) || 0}\n          </ListItem>\n        </List>\n      </Box>\n\n      <Box p={4}>\n        <Heading as='h2' fontSize='3xl' mb={4}>\n          Multiplcation and division results from the calculator:\n        </Heading>\n        <List spacing={3}>\n          <ListItem fontSize='lg'>\n            <ListIcon as={CheckCircleIcon} color='green.500' />\n            {lnObj.hits}: {correctnessAdvanced?.matches || 0}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={WarningTwoIcon} color='red.500' />\n            {lnObj.misses}: {correctnessAdvanced?.misses || 0}\n          </ListItem>\n          <ListItem fontSize='lg'>\n            <ListIcon as={InfoIcon} color='yellow.500' />\n            {lnObj.accuracity}: {correctnessAdvanced?.ratio?.toFixed(2) || 0}\n          </ListItem>\n        </List>\n      </Box>\n    </MainForm>\n  );\n};\n\nexport default Me;\n"],"sourceRoot":""}