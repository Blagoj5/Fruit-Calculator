{"version":3,"sources":["components/UI/Spinner.tsx","components/Logo.tsx","components/Navigation/NavigationItem.tsx","components/Navigation/NavigationItems.tsx","hoc/Layout.tsx","pages/Index.tsx","App.tsx","index.tsx","reportWebVitals.ts","store/reducers/main.ts","store/actions/main.ts","hooks/useMyStore.ts","components/UI/Buttons.tsx","components/UI/Buttons.module.css"],"names":["Spinner","style","display","justifyContent","minHeight","alignItems","animation","logo","Logo","language","useMyStore","className","to","NavigationItem","children","href","navItems","displayName","NavigationItems","useSelector","state","Nav","map","item","results","NavigationItemsAccount","onSwitch","h","mr","justify","align","m","onChange","color","Layout","dispatch","useDispatch","useRef","useEffect","type","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","id","console","log","current","changeLanguage","as","minH","backgroundImage","pt","lnObj","header","text","text2","text3","Index","w","mx","d","boxShadow","p","height","borderRadius","flexDirection","base","lg","flex","direction","mb","size","whiteSpace","ratio","src","Calculator","React","lazy","About","Me","App","middlewares","routes","path","component","exact","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","name","surname","age","city","sagaMiddleware","createSagaMiddleware","store","createStore","action","initalObject","JSON","parse","localStorage","getItem","payload","objectToBeStored","setItem","stringify","undefined","ACTION_TYPES","STORE_RESULTS","property","calculator","correctness","miss","misses","matches","objectToBeSaved","RESET_SCORE","object","correctnessSimple","correctnessAdvanced","applyMiddleware","app","StrictMode","ReactDOM","render","document","getElementById","FIRST_BATCH","SECOND_BATCH","BATCH","INITIAL_LOAD","CHANGE_LANGUAGE","storeResults","actionType","resetScore","ln","PrimaryButtonLink","rest","buttonStyle","_hover","colorScheme","px","width","styles","Link","LinkOutline","PrimaryButton","onClick","module","exports"],"mappings":"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","file":"static/js/main.693b02f0.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner as SpinenrRb } from 'react-bootstrap';\n\ninterface SpinnerProps {}\n\nexport const Spinner: React.FC<SpinnerProps> = ({}) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        minHeight: '90vh',\n        alignItems: 'center',\n      }}\n    >\n      <SpinenrRb animation='border' />\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useMyStore } from '../hooks/useMyStore';\n\nconst logo = ['Fruit Calculator', 'Овошен Калкулатор'];\n\nexport const Logo = () => {\n  const { language } = useMyStore();\n  return (\n    <NavLink className='navbar-brand' to='/'>\n      {logo[language]}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface NavigationItemProps {\n  children: JSX.Element | string;\n  href: string;\n}\n\nexport const NavigationItem: React.FC<NavigationItemProps> = ({\n  children,\n  href,\n}) => {\n  return (\n    <Link to={href} className='nav-link'>\n      {children}\n    </Link>\n  );\n};\n","import { Flex, Text } from '@chakra-ui/react';\nimport { Switch } from '@chakra-ui/switch';\nimport React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { initialState } from '../../store/reducers/main';\nimport { NavigationItem } from './NavigationItem';\n\nconst navItems = [\n  {\n    displayName: ['Calculator', 'Калкулатор'],\n    href: '/calculator',\n  },\n  {\n    displayName: ['About', 'За Нас'],\n    href: '/about',\n  },\n];\n\nexport const NavigationItems: React.FC<{}> = ({}) => {\n  const language = useSelector(\n    (state) => (state as typeof initialState).language\n  );\n\n  return (\n    <Nav className='mr-auto'>\n      {navItems.map((item) => (\n        <NavigationItem\n          // onClick={() => history.push(item.href)}\n          href={item.href}\n          key={item.displayName[language]}\n        >\n          {item.displayName[language]}\n        </NavigationItem>\n      ))}\n    </Nav>\n  );\n};\n\ntype NavAccProps = {\n  onSwitch: (...args: any) => any;\n};\n\nconst results = ['Results', 'Резултати'];\nexport const NavigationItemsAccount: React.FC<NavAccProps> = ({ onSwitch }) => {\n  const language = useSelector(\n    (state) => (state as typeof initialState).language\n  );\n\n  return (\n    <Nav>\n      <Flex h='100' mr={3} justify='center' align='center'>\n        <Switch m='auto' mr={2} onChange={onSwitch} />\n        <Text color='gray.500'>{language === 0 ? 'EN' : 'MK'}</Text>\n      </Flex>\n      <NavigationItem href='/me'>{results[language]}</NavigationItem>\n    </Nav>\n  );\n};\n","import { Box } from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { Logo } from '../components/Logo';\nimport {\n  NavigationItems,\n  NavigationItemsAccount,\n} from '../components/Navigation/NavigationItems';\nimport { changeLanguage } from '../store/actions/main';\nimport { initialState } from '../store/reducers/main';\nimport { DispatchFunction } from '../types/redux';\n\ninterface LayoutProps {\n  children: JSX.Element;\n}\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  const dispatch = useDispatch<DispatchFunction<typeof initialState>>();\n  const language = useRef<0 | 1>(0);\n\n  const toggleLanguageHandler = () => {\n    console.log('i was toggled');\n    language.current = language.current === 0 ? 1 : 0;\n\n    dispatch(changeLanguage(language.current));\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: 'INITIAL_LOAD',\n    });\n  }, []);\n  return (\n    <>\n      <Navbar collapseOnSelect expand='lg' bg='light' variant='light'>\n        <Logo />\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <NavigationItems />\n          <NavigationItemsAccount onSwitch={toggleLanguageHandler} />\n        </Navbar.Collapse>\n      </Navbar>\n      <Box\n        as='main'\n        minH='95vh'\n        backgroundImage='url(\"https://eskipaper.com/images/kids-wallpaper-4.jpg\")'\n        pt='80px'\n      >\n        {children}\n      </Box>\n    </>\n  );\n};\n","import {\n  Box,\n  Heading,\n  Text,\n  Image,\n  Flex,\n  Button,\n  AspectRatio,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { PrimaryButtonLink } from '../components/UI/Buttons';\nimport { useMyStore } from '../hooks/useMyStore';\n\ninterface IndexProps {}\n\nconst lnObj = {\n  header: ['Welcome to Fruit Calculator', 'Овошен Калкулатор, добро дојдовте!'],\n  text: [\n    `Calculator made for kids with special needs that uses visual elements\n          (fruits) to represent numbers and the final result of the calculations`,\n    `Калкулатор направен за деца со посебни потреби кој користи визуелни елементи (овошје) за да претставува броеви и крајниот резултат на пресметките`,\n  ],\n  text2: ['Play', 'Играј'],\n  text3: ['Why Fruit Calculator?', 'Зошто овошен калкулатор?'],\n};\n\nconst Index: React.FC<IndexProps> = (...props) => {\n  const { language } = useMyStore();\n  return (\n    <Box\n      w='75%'\n      mx='auto'\n      d='flex'\n      boxShadow='2xl'\n      p={4}\n      height='600px'\n      alignItems='center'\n      justifyContent='space-evenly'\n      bg='whiteAlpha.900'\n      borderRadius='md'\n      flexDirection={{ base: 'column-reverse', lg: 'row' }}\n    >\n      <Flex\n        flex={1}\n        h='100%'\n        direction='column'\n        justifyContent='center'\n        w={{ base: '100%', lg: 'auto' }}\n        mb={{ base: 8, lg: 'none' }}\n      >\n        <Heading size='lg' mb={4}>\n          {lnObj.header[language]}\n        </Heading>\n        <Text mb={5}>{lnObj.text[language]}</Text>\n        <Flex>\n          <PrimaryButtonLink href='/calculator' w='100px' mr={4}>\n            {lnObj.text2[language]}\n          </PrimaryButtonLink>\n          <PrimaryButtonLink\n            href='/about'\n            variant='outline'\n            w='190px'\n            whiteSpace='break-spaces'\n          >\n            {lnObj.text3[language]}\n          </PrimaryButtonLink>\n        </Flex>\n      </Flex>\n      <Box flex={{ base: 'none', lg: 2 }} w={{ base: '100%', lg: 'auto' }}>\n        <AspectRatio ratio={16 / 9}>\n          <Image src='/fruit-calc.gif' h='100%' w='100%' />\n        </AspectRatio>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Index;\n","import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Spinner } from './components/UI/Spinner';\nimport { Layout } from './hoc/Layout';\nimport Index from './pages/Index';\n\nconst Calculator = React.lazy(() => {\n  return import('./pages/Calculator');\n});\n\nconst About = React.lazy(() => {\n  return import('./pages/About');\n});\n\nconst Me = React.lazy(() => {\n  return import('./pages/Me');\n});\n\nfunction App() {\n  const routes = (\n    <Switch>\n      <Route path='/calculator' component={Calculator} />\n      <Route path='/me' component={Me} />\n      <Route path='/about' component={About} />\n      <Route path='/' exact component={Index} />\n      <Redirect to='/' />\n    </Switch>\n  );\n  return (\n    <Layout>\n      <Suspense fallback={<Spinner />}>{routes}</Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Middleware,\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { ActionType } from './types/redux';\nimport { reducer } from './store/reducers/main';\n// // 1. Import the extendTheme function\n// import { extendTheme } from '@chakra-ui/react';\n\n// // 2. Extend the theme to include custom colors, fonts, etc\n// const colors = {\n//   brand: {\n//     900: '#1a365d',\n//     800: '#153e75',\n//     700: '#2a69ac',\n//   },\n// };\n// const theme = extendTheme({ colors });\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = (middlewares: Middleware[]) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  } else {\n    return applyMiddleware(...middlewares);\n  }\n};\n\n// CREATE ACTION CREATERS AND SEPRATE REDUCER IN NEW FILE\n\n// Combining reducers\n// const rootReducer = combineReducers({\n// burgerBuilder: burgerBuilderReducer,\n// order: orderReducer,\n// auth: authReducer,\n//   test\n// });\n\n// The store itself\nconst store = createStore(reducer, composeEnhancers([sagaMiddleware]));\n\n// Watchers\n// sagaMiddleware.run(watchAuth);\n// sagaMiddleware.run(watchBurgerBuilder);\n// sagaMiddleware.run(watchOrder);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <ChakraProvider>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ChakraProvider>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FruitsType } from '../../types';\nimport { ActionType } from '../../types/redux';\nimport { ACTION_TYPES } from '../actions/main';\n\nexport const initialState: {\n  language: 0 | 1;\n  name: string;\n  surname: string;\n  age: number;\n  city: string;\n  learnMath?: boolean;\n  fruit?: FruitsType;\n  /**  Correctness for + and - */\n  correctnessSimple?: {\n    misses?: number;\n    matches?: number;\n    ratio?: number;\n  };\n  /**  Correctness for * and / */\n  correctnessAdvanced?: {\n    misses?: number;\n    matches?: number;\n    ratio?: number;\n  };\n} = { name: '', surname: '', age: 0, city: '', language: 0 };\n\nexport const reducer = (\n  state = initialState,\n  action: ActionType<typeof initialState> & {\n    payload?: {\n      miss?: number;\n      hit?: number;\n      calculator?: 'simple' | 'advanced';\n    };\n  }\n): typeof state => {\n  switch (action.type) {\n    case 'INITIAL_LOAD':\n      const initalObject = JSON.parse(localStorage.getItem('infos') || 'null');\n\n      return initalObject || state;\n    case 'CHANGE_LANGUAGE':\n      return {\n        ...state,\n        language: action.payload?.language || 0,\n      };\n    case 'BATCH':\n      const objectToBeStored = {\n        ...state,\n        ...action.payload,\n      };\n      localStorage.setItem(\n        'infos',\n        JSON.stringify({ ...objectToBeStored, type: undefined })\n      );\n      return objectToBeStored;\n    case ACTION_TYPES.STORE_RESULTS:\n      let property: 'correctnessSimple' | 'correctnessAdvanced' =\n        'correctnessSimple';\n\n      if (action.payload?.calculator === 'advanced') {\n        property = 'correctnessAdvanced';\n      }\n\n      let correctness:\n        | {\n            misses?: number | undefined;\n            matches?: number | undefined;\n            ratio?: number | undefined;\n          }\n        | undefined = {\n        ...state[property],\n      };\n\n      if (action.payload?.miss) {\n        correctness.misses = state[property]?.misses\n          ? state[property]!.misses! + 1\n          : 1;\n      } else {\n        correctness.matches = state[property]?.matches\n          ? state[property]!.matches! + 1\n          : 1;\n      }\n      // Calculate final ratio. Matches/ full lengths of guesses\n      let ratio =\n        (correctness.matches || 0) /\n        ((correctness.misses || 0) + (correctness.matches || 0));\n\n      correctness.ratio = ratio;\n\n      const objectToBeSaved = {\n        ...state,\n        [property]: correctness,\n      };\n\n      localStorage.setItem(\n        'infos',\n        JSON.stringify({ ...objectToBeSaved, type: undefined })\n      );\n\n      return objectToBeSaved;\n\n    case ACTION_TYPES.RESET_SCORE:\n      const object = {\n        ...state,\n        correctnessSimple: undefined,\n        correctnessAdvanced: undefined,\n      };\n\n      localStorage.setItem(\n        'infos',\n        JSON.stringify({ ...object, type: undefined })\n      );\n      return object;\n    default:\n      return initialState;\n  }\n};\n","export const ACTION_TYPES = {\n  FIRST_BATCH: 'FIRST_BATCH',\n  SECOND_BATCH: 'SECOND_BATCH',\n  BATCH: 'BATCH',\n  INITIAL_LOAD: 'INITIAL_LOAD',\n  STORE_RESULTS: 'STORE_RESULTS',\n  RESET_SCORE: 'RESET_SCORE',\n  CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\n} as const;\n\n// Action creators\nexport const storeResults = ({\n  actionType,\n  calculator,\n}: {\n  actionType: 'miss' | 'hit';\n  calculator: 'simple' | 'advanced';\n}) => {\n  return {\n    type: ACTION_TYPES.STORE_RESULTS,\n    payload: {\n      [actionType]: 1,\n      calculator,\n    },\n  };\n};\n\nexport const resetScore = () => {\n  return {\n    type: ACTION_TYPES.RESET_SCORE,\n  };\n};\n\nexport const changeLanguage = (ln: 0 | 1) => {\n  return {\n    type: ACTION_TYPES.CHANGE_LANGUAGE,\n    payload: {\n      language: ln,\n    },\n  };\n};\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport { initialState } from '../store/reducers/main';\n\nexport const useMyStore = () => {\n  const store = useSelector((state) => state as typeof initialState);\n\n  return store;\n};\n","import { Button, ButtonProps } from '@chakra-ui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Buttons.module.css';\n\ninterface PrimaryButtonLink extends ButtonProps {\n  children: string;\n  href: string;\n}\n\nexport const PrimaryButtonLink: React.FC<PrimaryButtonLink> = ({\n  children,\n  href,\n  variant,\n  ...rest\n}) => {\n  let buttonStyle: ButtonProps = {\n    bg: 'blue.400',\n    color: 'white',\n    _hover: {\n      bg: 'blue.500',\n      color: 'white',\n    },\n  };\n  if (variant === 'outline') {\n    buttonStyle = {\n      variant,\n      colorScheme: 'blue',\n    };\n  }\n\n  return (\n    <Button px={0} {...buttonStyle} {...rest}>\n      <Link\n        to={href}\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n        className={variant !== 'outline' ? styles.Link : styles.LinkOutline}\n      >\n        {children}\n      </Link>\n    </Button>\n  );\n};\n\ninterface PrimaryButton extends ButtonProps {\n  children: string;\n}\n\nexport const PrimaryButton: React.FC<PrimaryButton> = ({\n  children,\n  onClick,\n  ...rest\n}) => {\n  return (\n    <Button\n      bg='blue.400'\n      color='white'\n      _hover={{\n        bg: 'blue.500',\n        color: 'white',\n      }}\n      onClick={onClick}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Buttons_Link__1w78y\",\"LinkOutline\":\"Buttons_LinkOutline__3VadL\"};"],"sourceRoot":""}